{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"moment\"","webpack:///external \"jquery\"","webpack:///external \"app/core/app_events\"","webpack:///external \"lodash\"","webpack:///./module.ts","webpack:///./canvas-metric.ts","webpack:///external \"app/plugins/sdk\"","webpack:///./distinct-points.ts","webpack:///external \"app/core/utils/kbn\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","_canvasMetric","_distinctPoints","u","a","h","setPrototypeOf","__proto__","Array","this","constructor","grafanaColors","DiscretePanelCtrl","_super","$scope","$injector","annotationsSrv","_this","defaults","display","rowHeight","valueMaps","op","text","rangeMaps","from","to","colorMaps","color","metricNameColor","valueTextColor","timeTextColor","crosshairColor","backgroundColor","lineColor","textSize","textSizeTime","extendLastValue","writeLastValue","writeAllValues","writeMetricNames","showTimeAxis","showLegend","showLegendNames","showLegendValues","showLegendPercent","highlightOnMouseover","expandFromQueryS","legendSortBy","units","annotations","data","legend","externalPT","isTimeline","isStacked","hoverPoint","colorMap","unitFormats","formatter","_colorsPaleteCash","_renderDimensions","_selectionMatrix","_lodash2","defaultsDeep","panel","events","on","onInitEditMode","onRender","onPanelInitialized","onRefresh","onDataReceived","onDataSnapshotLoad","__extends","$inject","updateColorInfo","onConfigChanged","snapshotData","onDataError","err","console","log","_kbn2","getUnitFormats","addEditorTab","editorTabIndex","refresh","context","_updateRenderDimensions","_updateSelectionMatrix","_updateCanvasSize","_renderRects","_renderTimeAxis","_renderLabels","_renderAnnotations","_renderSelection","_renderCrosshair","renderingCompleted","showLegandTooltip","pos","info","body","val","count","_moment2","duration","ms","humanize","$tooltip","html","place_tt","pageX","pageY","clearTT","detach","formatValue","isNumber","length","map","parseFloat","decimals","isNull","isNil","isString","toString","getColor","has","randomColor","letters","split","Math","floor","random","applyPanelTimeOverrides","range","subtract","raw","dataList","_jquery2","canvas","css","forEach","metric","type","columns","Error","res","DistinctPoints","j","rows","row","add","finish","push","res_1","target","datapoints","point","updateLegendMetrics","getAnnotations","dashboard","then","result","loading","notify","combineLegend","removeColorMap","index","indexOf","splice","cm","render","addColorMap","what","legendInfo","v","removeValueMap","addValueMap","removeRangeMap","rangeMap","addRangeMap","update","valueFormats","getLegendDisplay","disp","showLegendCounts","showLegendTime","hassomething","dec","legendPercentDecimals","per","changes","percentunit","showTooltip","evt","isExternal","start","time","mouse","down","min","ts","position","max","formatDate","rect","getBoundingClientRect","top","panelRelY","height","window","innerHeight","scrollTop","elapsed","pX","x","left","width","onGraphHover","showTT","hover","y","rowsHeight","min_1","isUndefined","valueOf","max_1","width_1","anno","find","isRegion","timeEnd","anno_x","mouse_x","offsetX","onMouseClicked","where","event","metaKey","ctrlKey","pt","utc","timeSrv","setTime","clear","onMouseSelectedRange","_app_events2","emit","wrap","timeHeight","matrix","positions","predicate","all","crosshairHover","mouseX","_selectedMetric","legendItem","_selectedLegendItem","_getVal","rs","_devicePixelRatio","scale","metricIndex","rectIndex","ctx","rowObj","currentX","nextX","fillStyle","globalAlphaTemp","globalAlpha","fillRect","top_1","strokeStyle","beginPath","moveTo","lineTo","stroke","lineWidth","textBaseline","font","_a","centerY","labelPositionMetricName","labelPositionLastValue","labelPositionValue","hoverTextStart","hoverTextEnd","textAlign","fillText","txtinfo","measureText","minTextSpot","maxTextSpot","save","clip","restore","xmin","xmax","strokeRect","setLineDash","lineDashOffset","estTimeInterval","timeResolution","getTimeResolution","pixelStep","nextPointInTime","roundDate","xPos","timeFormat","time_format","displayOffset","timezone","Date","getTimezoneOffset","date","dateStr","xOffset","arc","PI","fill","isAlert","source","iconColor","annotation","_drawVertical","xPosStart","xPosEnd","timeVal","headerColumnIndent","templateUrl","scrollable","CanvasPanelCtrl","onPanelInitalized","devicePixelRatio","centerV","globalCompositeOperation","getMousePosition","clientY","yRel","link","scope","elem","attrs","ctrl","document","createElement","appendChild","getContext","addEventListener","panelRelX","xRel","buttons","isThis","id","sharedTooltipModeEnabled","otherPanelInFullscreenMode","gevt","sharedCrosshairModeOnly","secPerTick","timeIntInSecs","timeStamp","roundee","fmt","monthNames","dayNames","strftime","hours12","escape","hours","getHours","isAM","charAt","getDay","getMonth","leftPad","getDate","getMinutes","getSeconds","getFullYear","join","pad","MetricsPanelCtrl","obj","PointInfo","LegendValue","last","asc","transitionCount","distinctValuesCount","reverse","until","distinct","Map","set","size","orderBy","merged","leg"],"mappings":"0IACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,cAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,YAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtDhC,EAAAmC,EAAA,GAIAnC,IAAAoC,EAAA,cAAAC,EAAAjC,GClFAD,EAAAD,QAAAoC,iBCAAnC,EAAAD,QAAAqC,iBCAApC,EAAAD,QAAAsC,iBCAArC,EAAAD,QAAAuC,oGCEA,IAAAC,EAAA1C,EAAA,GACA2C,EAAA3C,EAAA,GAAAoC,EAAAQ,EAEA5C,EAAA,IAAA6C,EAAAD,EACA5C,EAAA,IAAAkB,EAAA0B,EACA5C,EAAA,IAAAK,EAAAuC,EACA5C,EAAA,IAAA8C,EAAAF,EAEA5C,EAAA,aAAA4C,EAAAtB,GAAA,OAAAA,KAAAE,WAAAF,GAAAQ,QAAAR,GAAA,IAAAZ,EAAA,eAAAY,EAAA,SAAAe,EAAAjC,GAAA,OAAAkB,EAAAR,OAAAiC,iBAAAC,wBAAAC,OAAA,SAAA3B,EAAAe,GAAAf,EAAA0B,UAAAX,IAAA,SAAAf,EAAAe,GAAA,QAAAjC,KAAAiC,IAAAH,eAAA9B,KAAAkB,EAAAlB,GAAAiC,EAAAjC,MAAAiC,EAAAjC,IAAA,gBAAAiC,EAAAjC,GAAA,SAAAyB,IAAAqB,KAAAC,YAAAd,EAAAf,EAAAe,EAAAjC,GAAAiC,EAAAJ,UAAA,OAAA7B,EAAAU,OAAAY,OAAAtB,IAAAyB,EAAAI,UAAA7B,EAAA6B,UAAA,IAAAJ,IAAA,GAEMuB,GACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAIFC,EAAA,SAAAC,GAkDE,SAAAD,EACEE,EAAMC,EAAQC,GADsB,IAAAC,EAAAJ,EAAA/C,KAAA2C,KAAAK,EAAAC,IAAAN,KAerC,OA7DDQ,EAAAD,eAAWA,EACTC,EAAAC,UACAC,QAAA,WACAC,UAAW,GACXC,YAAazC,MAAM,OAAQ0C,GAAI,IAAnBC,KAA2B,QACvCC,YAAaC,KAAM,OAAOC,GAAA,OAAdH,KALH,QAMTI,YAAAJ,KAAiB,MANRK,MAAA,SAOTC,gBAAgB,UAChBC,eAAe,UACfC,cAAA,UACAC,eAAA,UACAC,gBAAW,wBACXC,UAAU,kBACVC,SAAA,GACAC,aAAA,GACAC,mBACAC,kBACAC,kBACAC,oBACAC,gBACAC,cACAC,mBACAC,oBACAC,qBACAC,wBACAC,iBAAc,EACdC,aAAO,MA1BTC,MAAA,SA8BAhC,EAAAiC,eACAjC,EAAAkC,KAAA,KAEAlC,EAAAmC,OAAA,KACAnC,EAAAoC,cACApC,EAAAqC,cACArC,EAAAsC,aACAtC,EAAAuC,WAAA,KACAvC,EAAAwC,YACAxC,EAAAyC,YAAiB,KAEjBzC,EAAA0C,UAAA,KACA1C,EAAA2C,kBAAyB,KACzB3C,EAAA4C,qBAME5C,EAAA6C,oBAEAC,EAAK1E,QAAM2E,aAAU/C,EAAYgD,MAAAhD,EAAAC,UAEjCD,EAAKgD,MAAL9C,QAAe,WACfF,EAAKiD,OAAOC,GAAG,iBAAelD,EAALmD,eAAzBjF,KAAA8B,IACAA,EAAKiD,OAAOC,GAAG,SAAAlD,EAAAoD,SAAqBlF,KAAK8B,IACzCA,EAAKiD,OAAOC,GAAG,oBAAgBlD,EAAUqD,mBAAzCnF,KAAA8B,IAEAA,EAAKiD,OAAOC,GAAG,UAAAlD,EAAiBsD,UAAKpF,KAAA8B,IACrCA,EAAKiD,OAAOC,GAAG,gBAAAlD,EAAsBuD,eAAKrF,KAAA8B,IAC1CA,EAAKiD,OAAOC,GAAG,qBAAmBlD,EAAAwD,mBAAlCtF,KAAA8B,oDACDA,EAjE6B,OAAAyD,EAAA9D,EAAAC,GAkD9BD,EAAA+D,SAAY,SAAQ,YAAkB,kBAkBpC/D,EAAKpB,UAAL8E,mBAAA,WACA7D,KAAKmE,kBAFPnE,KAAAoE,mBAMEjE,EAAKpB,UAAeiF,mBAApB,SAAAK,GADFrE,KAAA+D,eAAAM,IAKElE,EAAKpB,UAALuF,YAAA,SAAAC,GACAvE,KAAAyC,eAFF+B,QAAAC,IAAA,cAAAF,IAMEpE,EAAKpB,UAAc4E,eAAI,WAEvB3D,KAAKiD,YACHyB,EAAA9F,QACA+F,iBAGF3E,KAAK4E,aACH,UACA,mEAFF,GAKA5E,KAAK4E,aACH,SACA,kEACA,GAEF5E,KAAK4E,aACH,SADF,kEAEE,GAGF5E,KAAK4E,aAAA,WAAL,uEACA5E,KAAK6E,eAAL,EAxBF7E,KAAA8E,WA4BE3E,EAAIpB,UAAA6E,SAA2B,WAC7B,MAAA5D,KAAA0C,MAAA1C,KAAA+E,UAIF/E,KAAKgF,0BACLhF,KAAKiF,yBACLjF,KAAKkF,oBACLlF,KAAKmF,eACLnF,KAAKoF,kBACLpF,KAAKqF,gBACLrF,KAAKsF,qBACLtF,KAAKuF,mBAELvF,KAAKwF,mBAfPxF,KAAAyF,uBAmBEtF,EAAWpB,UAAA2G,kBAAA,SAA0CC,EAAMC,GAE3D,IAAAC,EAAQ,mCAARD,EAAAE,IAAA,SACAD,GAAI,WACFD,EAAAG,MAAa,IACdF,GAAAD,EAAAG,MAAA,uBAEDF,GAAIG,EAAapH,QAAGqH,SAAAL,EAAAM,IAAAC,WAClBP,EAAAG,MAAQ,IACTF,GAAA,cAGDA,GAAK,YAbP7F,KAAAoG,SAAAC,KAAAR,GAAAS,SAAAX,EAAAY,MAAA,GAAAZ,EAAAa,QAiBErG,EAAcpB,UAAd0H,QAAA,WADFzG,KAAAoG,SAAAM,UAKEvG,EAAIpB,UAAE4H,YAAe,SAAAb,GACnB,GAAAxC,EAAS1E,QAAMgI,SAAWd,GAAA,CACxB,GAAA9F,KAAKwD,MAAIzC,UACP,QAAI7D,EAAA,EAAMA,EAAK8C,KAAMwD,MAAAzC,UAArB8F,OAAA3J,IAAA,CAEA,IAAA4J,EAAA9G,KAAAwD,MAAAzC,UAAA7D,GAEI8D,EAAK+F,WAAWD,EAAX9F,MAEP,GADE+F,WAAaD,EAAA7F,KACf6E,GAAW9E,GAAX8E,EACD,OAAAgB,EAAAhG,KAMHd,KAAAkD,YACD4C,EAAA9F,KAAAkD,UAAA4C,EAAA9F,KAAAwD,MAAAwD,WAIH,IAAIC,EAAA3D,EAAY1E,QAAAsI,MAAEpB,GAKhB,IAJAmB,GAAU3D,EADqB1E,QACTuI,SAAArB,KACvBA,IAAAsB,YAGKlK,EAAA,EAAMA,EAAK8C,KAAMwD,MAAA5C,UAArBiG,OAAA3J,IAGE,GAAY,UAFd4J,EAAA9G,KAAAwD,MAAA5C,UAAA1D,IAEMiB,OAOJ,GAAA2H,IAAOgB,EAAI3I,MACZ,OAAA2I,EAAAhG,UAPG,GAAAmG,EACD,OAAAH,EAAAhG,KAUH,OAAAmG,EACD,OA3CHnB,GAgDE3F,EAAIpB,UAAAsI,SAAW,SAAfvB,GACE,GAAAxC,EAAO1E,QAAK0I,IAAStH,KAArBgD,SAAA8C,GACD,OAAA9F,KAAAgD,SAAA8C,GAEC,YAAA9F,KAAImD,kBAAkB2C,GAAK,CAC3B,IAAAvI,EAAK2C,EAALF,KAAAmD,kBAAA0D,OAAA3G,EAAA2G,QACA7G,KAAKmD,kBAAkB2C,GAAvBvI,EACDyC,KAAAmD,kBAAA0D,SARH,OAAA7G,KAAAmD,kBAAA2C,IAaE3F,EAAcpB,UAAQwI,YAAtB,WAGE,IAFF,IAAIC,EAAQ,QAAZC,MAAA,IACAtG,EAAS,IACPjE,EAAS,EAAAA,EAAA,EAAQA,IAClBiE,GAAAqG,EAAAE,KAAAC,MAAAD,KAAAE,SAAAJ,EAAAX,SALH,OAAA1F,GAWEhB,EAAApB,UAAM8I,wBAAN,WAGE,GADFzH,EAAIrB,UAAW8I,wBAAyBxK,KAAM2C,MAC5CA,KAAIwD,MAAOlB,kBAAgBtC,KAASwD,MAAKlB,iBAAM,EAApC,CACX,IAAAtB,EAAWhB,KAAX8H,MAAA9G,KAAA+G,SAAA/H,KAAAwD,MAAAlB,iBAAA,KACAtC,KAAK8H,MAAM9G,KAAIA,EAChBhB,KAAA8H,MAAAE,IAAAhH,SAGHb,EAAApB,UAAAgF,eAAA,SAAAkE,GACE,IAAAzH,EAAAR,QAEIkI,EAAJtJ,SAAAoB,KAAAmI,QAAAC,IAAA,oBACA,IAAA1F,KACEY,EAAI1E,QAAAyJ,QAAYJ,EAAa,SAAAK,GAC3B,aAAIA,EAAWC,KAAO,CACpB,YAAUD,EAAME,QAAA,GAAAD,KACjB,UAAAE,MAAA,gDAEC,QAAIvL,EAAA,EAAMA,EAAIoL,EAAAE,QAAA3B,OAAA3J,IAAJ,CAER,IADF,IAAAwL,EAAS,IAATjJ,EAA2BkJ,eAAkBL,EAAAE,QAAAtL,GAAA4D,MACvC8H,EAAA,EAAMA,EAAAN,EAAAO,KAAVhC,OAAA+B,IAAA,CACA,IAAIE,EAAIR,EAAQO,KAAKD,GACtBF,EAAAK,IAAAD,EAAA,GAAAtI,EAAAmG,YAAAmC,EAAA5L,KAEDwL,EAAAM,OAAUxI,GACXkC,EAAAuG,KAAAP,QAED,CACA,IAAAQ,EAAA,IAAAzJ,EAAiBkJ,eAAYL,EAAAa,QAC3B7F,EAAA1E,QAAQyJ,QAAUC,EAAKc,WAAY,SAAnCC,GADFH,EAAAH,IAAAM,EAAA,GAAA7I,EAAAmG,YAAA0C,EAAA,OAIAH,EAAKF,OAAKxI,GACXkC,EAAAuG,KAAAC,MAGHlJ,KAAK0C,OAEL1C,KAAAsJ,sBAGItJ,KAAAO,eAAgBgJ,gBAChBC,UAAOxJ,KAAKwJ,UACZhG,MAAOxD,KAAKwD,MAEbsE,MACC9H,KAAA8H,QACE2B,KAAA,SAAAC,GACAlJ,EAAImJ,WACFD,EAAKjH,aAAciH,EAAOjH,YAA1BoE,OAAA,EADFrG,EAEOiC,YAAAiH,EAAAjH,YAENjC,EAAAiC,YAAA,KAGHjC,EAAAoD,YACE,WACApD,EAAKmJ,WACLnJ,EAAKiC,YAAL,KACAjC,EAAAoD,WApBNY,QAAAC,IAAA,OAAAjE,MA0BAL,EACEpB,UACMuK,oBACN,SAAWM,IAGX5J,KAAK0C,OAAS1C,KAAKwD,MAAnBvB,YAAAjC,KAAAwD,MAAAtB,iBAAAlC,KAAA0C,KAAAmE,QAAA,EANF7G,KAOO2C,OAAA3C,KAAA0C,KAEN1C,KAAA2C,QAAAlD,EAAAkJ,eAAAkB,cAAA7J,KAAA0C,KAAA1C,OAGC4J,GACD5J,KAAAoE,mBAIDjE,EAAYpB,UAAA+K,eAAU,SAAWhD,GACjC,IAAAiD,EAAWzG,EAAU1E,QAAOoL,QAA5BhK,KAAAwD,MAAAtC,UAAA4F,GACA9G,KAAKwD,MAAAtC,UAAL+I,OAAAF,EAAA,GAHF/J,KAAAmE,mBAOEhE,EAAApB,UAAAoF,gBAAA,WAEE,IADF,IAAA+F,KACMhN,EAAI,EAAAA,EAAK8C,KAAMwD,MAAAtC,UAAnB2F,OAAA3J,IAAA,CACA,IAAII,EAAE0C,KAAMwD,MAAAtC,UAAAhE,GACVI,EAAAwD,OACDoJ,EAAA5M,EAAAwD,MAAAxD,EAAA6D,OAGHnB,KAAKmD,qBACLnD,KAAKmD,kBAAL0D,OAAA,EACA7G,KAAKgD,SAALkH,EAXFlK,KAAAmK,UAcAhK,EAAApB,UAAAqL,YAAA,SAAAC,GACE,IAAI7J,EAAAR,KACF,WAAAqK,EACE/G,EAAI1E,QAAOyJ,QAAXrI,KAAuB0C,KAAA,SAAA4F,GACrBA,EAAAgC,YACEhH,EAAK1E,QAAAyJ,QAAAC,EAAMgC,WAAN,SAAA1E,GACH,IAAAtC,EAAS1E,QAAM0I,IAAK9G,EAAKwC,SAAO4C,EAAKE,KAAS,CAC9C,IAAAyE,GAAKzJ,KAAM8E,EAAXE,IAAA3E,MAAAX,EAAA6G,SAAAzB,EAAAE,MACAtF,EAAKgD,MAAAtC,UAAc+H,KAAOsB,GAC3B/J,EAAAwC,SAAA4C,EAAAE,KAAAyE,OAMRvK,KAAAwD,MAAAtC,UAAA+H,MAAAnI,KAAA,MAAAK,MAAAnB,KAAAuH,gBAfHvH,KAAAmE,mBAoBEhE,EAAYpB,UAAAyL,eAAU,SAAW1D,GACjC,IAAAiD,EAAWzG,EAAU1E,QAAOoL,QAA5BhK,KAAAwD,MAAA5C,UAAAkG,GACA9G,KAAKwD,MAAL5C,UAAAqJ,OAAAF,EAAA,GAHF/J,KAAAmK,UAOEhK,EAAWpB,UAAU0L,YAAK,WAD5BzK,KAAAwD,MAAA5C,UAAAqI,MAAA9K,MAAA,GAAA0C,GAAA,IAAAC,KAAA,MAKEX,EAAYpB,UAAA2L,eAAU,SAAWC,GACjC,IAAAZ,EAAWzG,EAAU1E,QAAOoL,QAA5BhK,KAAAwD,MAAAzC,UAAA4J,GACA3K,KAAKwD,MAALzC,UAAAkJ,OAAAF,EAAA,GAHF/J,KAAAmK,UAOEhK,EAAWpB,UAAU6L,YAAgB,WADvC5K,KAAAwD,MAAAzC,UAAAkI,MAAAjI,KAAA,GAAAC,GAAA,GAAAH,KAAA,MAIgBX,EAAApB,UAAAqF,gBAAA,SAAAyG,gBAAcA,MAE5B7K,KAAK6C,WAAmC,aAAvB7C,KAAKwD,MAAM9C,QAE5BV,KAAK8C,UAAL,YAAiB9C,KAAjBwD,MAAA9C,QACAV,KAAIkD,UAAW,KACblD,KAAKwD,MAAAhB,OAAY,SAAIxC,KAAAwD,MAAAhB,QACtBxC,KAAAkD,UAAAwB,EAAA9F,QAAAkM,aAAA9K,KAAAwD,MAAAhB,QAGCqI,EADF7K,KAEO8E,UAEN9E,KAAAmK,UAIDhK,EAAWpB,UAAXgM,iBAAA,SAAAnF,EAAA0C,GACA,IACE0C,EAAKpF,EAAME,IAIX,GAAA9F,KAAAwD,MAAQpB,mBAARpC,KAAAwD,MAAAyH,kBAAAjL,KAAAwD,MAAA0H,eAAA,CACAF,GAAI,KACJ,IAAIG,KAMF,GALAnL,KAAAwD,MAAQ0H,iBACRF,GAAAhF,EAAepH,QAAfqH,SAAAL,EAAAM,IAAAC,WACDgF,MAGCnL,KAAIwD,MAAApB,kBAAc,CAChB+I,IACDH,GAAA,MAGD,IAAII,EAAApL,KAAAwD,MAAE6H,sBACJ/H,EAAS1E,QAAMsI,MAAQkE,KAAvBA,EACExF,EAAA0F,IAAA,KAAAhD,EAAAiD,QAAA1E,OAAA,EACK,EACLjB,EAAA0F,IAAA,IACK,EAEN,GAGHN,GAAAtG,EAAA9F,QAAAkM,aAAAU,YAAA5F,EAAA0F,IAAAF,GACDD,KAGCnL,KAAIwD,MAAAyH,mBACFE,IACDH,GAAA,MAEFA,GAAApF,EAAAG,MAAA,KAEFiF,GAAA,IAxCH,OAAAA,GAiDE7K,EAAWpB,UAAX0M,YAAA,SAAAC,EAAArC,EAAAsC,GACA,IAAI3K,EAAKqI,EAAMuC,MACX3K,EAAAoI,EAAOuC,MAAXvC,EAAAnD,GACI2F,EAAMxC,EAAMnD,GAEZJ,EAAKuD,EAAMvD,IACG,MAAhB9F,KAAA8L,MAAOC,OACP/K,EAAK0G,KAAKsE,IAAIhM,KAAK8L,MAAMC,KAApBE,GAA6BjM,KAAK8L,MAAMI,SAAxCD,IAELJ,GADA5K,EAAAyG,KAAOyE,IAAKnM,KAAZ8L,MAAAC,KAAAE,GAAAjM,KAAA8L,MAAAI,SAAAD,KACMjL,EACP8E,EAAA,YAID,IAAAD,EAAQ,mCAARC,EAAA,SACAD,GAAQ,WACRA,GAAQ7F,KAAAwJ,UAAR4C,cAAApG,EAAApH,SAAAoC,IAAA,QACA6E,GAAQ,UACRA,GAAQ7F,KAAAwJ,UAAA4C,cAAApG,EAAsBpH,SAAaqC,IAA3C,aACA4E,GAAQG,EAAApH,QAARqH,SAAA4F,GAAA1F,WAAA,QAEAN,GAAI,YACJ,IAAIU,EAAQ,EACRC,EAAA,EACF,GAAAmF,EAAW,CACX,IAAAU,EAAQrM,KAAAmI,OAAemE,wBAErB,IADF9F,EAAI6F,EAAAE,IAAab,EAAA/F,IAAQ6G,UAAAH,EAAAI,QACvB,GAAAjG,KAAA0B,EAAAtJ,SAAA8N,QAAAC,cAGD,YADC3M,KAAAoG,SAAAM,SAIFF,MAAI0B,EAAetJ,SAAW8N,QAAKE,YACnC,IAAIC,EAAU7M,KAAJ8H,MAAY7G,GAAKjB,KAAM8H,MAAQ9G,KACzC8L,GAAQpB,EAAK/F,IAALoH,EAAY/M,KAAK8H,MAAK9G,MAA9B6L,EAZFtG,EAaO8F,EAAAW,KAAAF,EAAAT,EAAAY,WAEL1G,EAAQmF,EAAIA,IAAInF,MACjBC,EAAAkF,MAAAlF,MAxCHxG,KAAAoG,SAAAC,KAAAR,GAAAS,SAAAC,EAAA,GAAAC,EAAA,IA8CErG,EAAKpB,UAALmO,aAAA,SAAAxB,EAAAyB,EAAAxB,GAEE,GADF3L,KAAI4C,cACF5C,KAAI0C,MAAQ1C,KAAZ0C,KAAAmE,OAAA,CACA,IAAIuG,EAAI,KACJxE,EAAIlB,KAAGC,MAAA3H,KAAA8L,MAAAI,SAAAmB,EAAArN,KAAAwD,MAAA7C,WAQT,GAPAiI,EAAI,IACLA,EAAA,GAECA,GAAI5I,KAAK0C,KAAKmE,SACf+B,EAAA5I,KAAA0C,KAAAmE,OAAA,GAGC7G,KAAA6C,WAAQ,CACRuK,EAAKpN,KAAQ0C,KAAGkG,GAAI2C,QAAA,GAClB,QAAIrO,EAAK,EAAAA,EAAL8C,KAAa0C,KAAbkG,GAAwB2C,QAAQ1E,UAClC7G,KAAA0C,KAAAkG,GAAA2C,QAAArO,GAAA0O,MAAA5L,KAAA8L,MAAAI,SAAAD,IADuC/O,IAI1CkQ,EAAApN,KAAA0C,KAAAkG,GAAA2C,QAAArO,GAIC,GADF8C,KAAI+C,WAAKqK,EACPpN,KAAIyC,cAAiBkJ,GAAA3L,KAAkBoD,mBACrCsI,EAAI/F,IAAA0H,EAAMrN,KAAAoD,kBAAEkK,WAAiB,EAAL,CACxB,IAAIC,EAAMjK,EAAA1E,QAAE4O,YAAYxN,KAAK8H,MAAM9G,MAAM,KAAOhB,KAAK8H,MAAL9G,KAAcyM,UAC1DC,EAAApK,EAAa1E,QAAA4O,YAAkBxN,KAAnC8H,MAAA7G,IAAA,KAAAjB,KAAA8H,MAAA7G,GAAAwM,UAEME,EAAO3N,KAAAoD,kBAAO6J,MAClBW,EAAMtK,EAAU1E,QAAAiP,KAAA7N,KAAAyC,YAAA,SAAA9C,GACd,GAAAA,EAAAmO,SACD,OAAApC,EAAA/F,IAAAoH,EAAApN,EAAAkM,MAAAH,EAAA/F,IAAAoH,EAAApN,EAAAoO,QAED,IAAMC,GAAUrO,EAAAkM,KAAQ0B,IAAxBG,EAAAH,GAAAI,EACAM,EAAOvC,EAASA,IAAAwC,QANlB,OAAAF,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IASE,GAAAL,EAMD,OALCpJ,QAAAC,IAAA,mCAAAmJ,QAIA5N,KAAAoG,SAAAC,KAAAuH,EAAA9M,MAAAwF,SAAAoF,MAAAnF,MAAA,GAAAmF,MAAAlF,MAAA,GAMJ2G,IACAnN,KAAK4C,WAAY+I,EAClB3L,KAAAyL,YAAAC,EAAA0B,EAAAzB,IAtCH3L,KAwCO4D,gBACD+H,GACF3L,KAAA8C,YACAsK,EAAApN,KAAA0C,KAAAkG,GAAA0B,WAAA,GAOAtK,KAAK+C,WAAYqK,EAEjBpN,KAAI4D,WACFuJ,IACAnN,KAAK4C,WAAA+I,EACN3L,KAAA0F,kBAAAgG,MAAA0B,UAKNpN,KAAAoG,SAAAM,UAIDvG,EAAUpB,UAAWoP,eAAc,SAAnCC,EAAoDC,GAClD,GAAY,GAAZA,EAAAC,SAAwC,GAA5BD,EAAAE,QAAZ,CAKF,IAAIC,EAAAxO,KAAS+C,WACX,GAAAyL,GAAIA,EAAA5C,MAAS,CACb,IAAA9D,GAAa9G,KAAbgF,EAAApH,QAAA6P,IAAAD,EAAA5C,OAAA3K,GAAA+E,EAAApH,QAAA6P,IAAAD,EAAA5C,MAAA4C,EAAAtI,KACAlG,KAAK0O,QAALC,QAAA7G,GACD9H,KAAA4O,cARCpK,QAAAC,IAAA,2BAAA2J,EAAAC,IAYFlO,EAAUpB,UAAW8P,qBAAyB,SAAM/G,EAAAuG,GACtC,GAAZA,EAAAC,SAAY,GAAAD,EAAAE,SAIdvO,KAAK0O,QAALC,QAAA7G,GANF9H,KAAA4O,SAGIpK,QAAAC,IAAA,iCAAAqD,EAAAuG,IAOFlO,EAAWpB,UAAW6P,MAAtB,WACA5O,KAAK8L,MAAMI,SAAX,KACAlM,KAAK8L,MAAAC,KAAa,KAClB/L,KAAA+C,WAAA,QACAmF,EAAAtJ,SAAUoB,KAAKmI,QAAAC,IAAA,SAAf,QACA0G,EAAAlQ,QAAAmQ,KAAA,qBANF/O,KAAAmK,UASAhK,EAAApB,UAAAiG,wBAAA,WACE,IAAAxE,EAAKR,KAELA,KAAMoD,qBACN,IAAMiJ,EAAQrM,KAAKoD,kBAAkBiJ,KAAOrM,KAAKgP,KAAK1C,wBAChDzD,EAAA7I,KAAaoD,kBAAKyF,KAAkB7I,KAAA0C,KAAYmE,OAChDlG,EAAAX,KAAcoD,kBAAAzC,UAAAX,KAAoCwD,MAAA7C,UAClD2M,EAAatN,KAAKoD,kBAALkK,WAAoC3M,EAAMkI,EACvDoG,EAAUjP,KAAKwD,MAAAxB,aAAL,GAAgChC,KAAAwD,MAAa7B,aAA7D,EACM8K,EAASzM,KAAKoD,kBAAkBqJ,OAAQa,EAA9C2B,EACAhC,EAAKjN,KAAAoD,kBAA2B6J,MAAhCZ,EAAAY,MAEAjN,KAAIoD,kBAAJqJ,SACA,IAAIF,EAAA,EAEJM,EAAK7M,KAAA8H,MAAkB7G,GAAvBjB,KAAA8H,MAAA9G,KACAhB,KAAAoD,kBAAE8L,UACA5L,EAAI1E,QAAAyJ,QAAJrI,KAAA0C,KAAA,SAAA4F,GAEA,IAAI6G,KACF,GAAA3O,EAAIqC,WAEF,IADF,IAAAwG,EAASf,EAAOiD,QAAW,GACzBrO,EAAQ,EAAAA,EAAOoL,EAAQiD,QAAvB1E,OAAA3J,IAEE,IADFmM,EAAIf,EAAAiD,QAAerO,IACb0O,OAAUpL,EAAIsH,MAAM7G,GAAN,CAClB,IACA8L,EADSrF,KAAKyE,IAAA9C,EAAWuC,MAAzBpL,EAAAsH,MAAA9G,KAAA,GACU6L,EAAVI,EACDkC,EAAAlG,KAAA8D,GAKH,GAAAvM,EAAIsC,UACJ,CAAIuG,EAAQ,KAAZ,IACAuC,EAASpL,EAAOsH,MAAI9G,KAClB,IAAA9D,EAAQ,EAAAA,EAAOoL,EAAAgC,WAAfzD,OAAA3J,IACAmM,EAAIf,EAAUgC,WAAYpN,GAE1B6P,EADSrF,KAAKyE,IAAAP,EAAWpL,EAAzBsH,MAAA9G,KAAA,GACU6L,EAAVI,EACAkC,EAASlG,KAAM8D,GAChBnB,GAAAvC,EAAAnD,GAID1F,EAAA4C,kBADiC8L,OAAAjG,MAEjCoE,EAAAd,EAFF4C,cA3BF5C,GAAA5L,KAqCAR,EAAIpB,UAAAkG,uBAAsB,WAwD1B,IACAmK,GAvDIC,IAAA,WAFsB,UAKtBC,eAAI,SAA+BpS,EAAA0L,GACjC,OAAAA,EAAA,IAAO5I,KAAK0C,KAAQxF,GAAAqO,QAAW1E,OAChC7G,KAAA0C,KAAAxF,GAAAqO,QAAA3C,GAAAgD,OAAA5L,KAAA8L,MAAAI,SAAAD,GAPqBjM,KAAA0C,KAAAxF,GAAAqO,QAAA3C,GAAAgD,OAAA5L,KAAA8L,MAAAI,SAAAD,IAAAjM,KAAA8L,MAAAI,SAAAD,GAAAjM,KAAA0C,KAAAxF,GAAAqO,QAAA3C,EAAA,GAAAgD,OActB2D,OAAI,SAAWrS,EAAA0L,GACf,IAAIE,EAAA9I,KAAUoD,kBAAc8L,OAAQhS,GAClC,OAAA0L,EAAA,IAAOE,EAAIqG,UAAJtI,OACRiC,EAAAqG,UAAAvG,IAAA5I,KAAA8L,MAAAI,SAAAa,EAjBqBjE,EAAAqG,UAAAvG,IAAA5I,KAAA8L,MAAAI,SAAAa,GAAA/M,KAAA8L,MAAAI,SAAAa,EAAAjE,EAAAqG,UAAAvG,EAAA,IAwBtBN,OAAA,SAAOpL,GAxBe,OAAA8C,KAAA0C,KAAAxF,KAAA8C,KAAAwP,iBA2BtBC,WAAI,SAAsBvS,EAAA0L,GACxB,OAAA5I,KAAA0C,KAAOxF,KAAP8C,KAAAwP,iBAGHxP,KAAA0P,oBAAA5J,MAAA9F,KAAA2P,QAAAzS,EAAA0L,KAID,WACE,YAAA5I,KAAA0P,oBACD,mBAEC,YAAA1P,KAAAwP,gBACD,eAEC,UAAAxP,KAAA8L,MAAOC,KACR,YAEC,GAAA/L,KAAIwD,MAAKnB,sBAAY,MAAArC,KAAA8L,MAAAI,SAAA,CACnB,GAAAlM,KAAA6C,WACD,uBAEC,GAAA7C,KAAA8C,UACD,eAGJ,aAGepE,KAAAsB,KArBd,IAsBFtB,KAAAsB,MACAA,KAAKqD,oBACH,QAAInG,EAAK,EAATA,EAAA8C,KAAAoD,kBAAA8L,OAAArI,OAAA3J,IAAA,CAGE,IAFF,IAAI0S,KACJ5R,EAAKgC,KAAQoD,kBAAO8L,OAApBhS,GACK0L,EAAK,EAAAA,EAAA5K,EAAUmR,UAAlBtI,OAAA+B,IACDgH,EAAA3G,KAAAmG,EAAAlS,EAAA0L,IAEF5I,KAAAqD,iBAAA4F,KAAA2G,KAIDzP,EAAYpB,UAAQmG,kBAAuB,WAC3ClF,KAAKmI,OAAO8E,MAAZjN,KAAqBoD,kBAAA6J,MAAAjN,KAAgC6P,kBAErD7P,KAAAmI,OAAAsE,OAAAzM,KAAEoD,kBAAiBqJ,OAAczM,KAAA6P,qBACjC3H,EAAAtJ,SAAEoB,KAAKmI,QAAQC,IAAI,QAAnBpI,KAA6BoD,kBAAA6J,MAAA,SAE7B/E,EAAatJ,SAAMoB,KAAKmI,QAAAC,IAAA,SAAwBpI,KAAAoD,kBAAhDqJ,OAAA,MAPFzM,KAAA+E,QAAA+K,MAAA9P,KAAA6P,kBAAA7P,KAAA6P,oBAWE1P,EAAYpB,UAAZ4Q,QAAA,SAAAI,EAAAC,GACA,IAAI3G,SAFN,OAGIrJ,KAAA6C,aACDwG,EAAArJ,KAAA0C,KAAAqN,GAAAxE,QAAAyE,IAEChQ,KAAA8C,YACDuG,EAAArJ,KAAA0C,KAAAqN,GAAAzF,WAAA0F,IAPH3G,EAAAvD,KAWA3F,EAAApB,UAAAoG,aAAA,WACE,IAAM3E,EAAAR,KACAkP,EAAMlP,KAAKoD,kBAAjB8L,OACAe,EAAAjQ,KAAA+E,QACEzB,EAAM1E,QAASyJ,QAAArI,KAAf0C,KAAA,SAAA4F,EAAApL,GAEE,IADF,IAAAgT,EAAahB,EAAOhS,GACZ0L,EAAA,EAAAA,EAAWsH,EAAOf,UAAPtI,OAAjB+B,IAAA,CACA,IAAIuH,EAAQD,EAAKf,UAAAvG,GACbwH,EAAA5P,EAAU4C,kBAAiB6J,MAC7BrE,EAAA,IAAQsH,EAAOf,UAAUtI,SAC1BuJ,EAAAF,EAAAf,UAAAvG,EAAA,IAEDqH,EAAII,UAAA7P,EAAkB6G,SAAI7G,EAA1BmP,QAAAzS,EAAA0L,IACA,IAAI0H,EAAML,EAAAM,YACR/P,EAAI6C,iBAAJnG,GAAA0L,KACDqH,EAAAM,YAAA,IAODN,EAAIO,SAAAL,EAAcjB,EAAAhS,GAAlBmQ,EAAA+C,EAAAD,EAAA3P,EAAA4C,kBAAAzC,WACDsP,EAAAM,YAAAD,EAGC,GAAApT,EAAM,GACN,IAAIuT,EAAAvB,EAAchS,GAAAmQ,EAClB4C,EAAIS,YAAJlQ,EAAAgD,MAAA/B,UACAwO,EAAIU,YACJV,EAAIW,OAAO,EAAAH,GACXR,EAAIY,OAAJrQ,EAAA4C,kBAAA6J,MAAAwD,GACDR,EAAAa,aAIL3Q,EAAApB,UAAAsG,cAAA,WACE,IAAI7E,EAAMR,KACNiQ,EAAAjQ,KAAJ+E,QACAkL,EAAIc,UAAJ,EACAd,EAAIe,aAAY,SAEhBf,EAAMgB,KAAAjR,KAANwD,MAAA9B,SAAA,+CACA,IACAf,EAAAX,KAAEoD,kBAAmBzC,UACb2C,EAAA1E,QAAAyJ,QAAArI,KAAA0C,KAAA,SAAA4F,EAAApL,GAAA,IAACgU,EAAA1Q,EAAD4C,kBAAA8L,OAAAhS,GAAImQ,EAAA6D,EAAA7D,EAEJ8B,EAAU+B,EAAI/B,UACpBgC,EAAA9D,EAAA1M,EAAA,EAIIyQ,EAAyBD,EACzBE,EAAqBF,EAErBG,EAAJH,EACII,GAAJ,EAEIC,GAAW,EACb,GAAAhR,EAAKsL,MAAII,SACP,QAAItD,EAAA,EAAAA,EAAAuG,EAAqBtI,OAAM+B,IAC7B,GAAAuG,EAASvG,IAAApI,EAAUsL,MAASI,SAAKa,IAC/BnE,GAAIuG,EAAMtI,OAAa,GAAvBsI,EAAAvG,EAAA,IAAApI,EAAAsL,MAAAI,SAAAa,GAAA,CACA,IAAIjH,EAAAtF,EAAYmP,QAAKzS,EAAL0L,GAChBqH,EAAII,UAAY7P,EAAhBgD,MAAAnC,eACA4O,EAAAwB,UAAA,OACAF,EAAApC,EAAkBvG,GAvBtB,EAwBIqH,EAAMyB,SAAA5L,EAAcyL,EAApBD,GAEAE,EAAAD,GADAI,EAAA1B,EAAe2B,YAAA9L,IACfmH,MAAA,EACD,MAMP,IAAI4E,EAAc,EACdC,EAAWtR,EAAA4C,kBAAkB6J,MAC/B,GAAAzM,EAAIgD,MAAAzB,iBAAuB,CAC3BkO,EAAII,UAAY7P,EAAhBgD,MAAApC,gBACA6O,EAAMwB,UAAU,OAChB,IAAIE,EAAA1B,EAAA2B,YAAsBtJ,EAAA7K,OACxB8T,EAAa,GAAOA,EAAcI,EAAA1E,SAClCgD,EAAAyB,SAAApJ,EAAc7K,KAxCd,EAwC2B2T,GAC5BS,EAzCC,EAyCD5B,EAAA2B,YAAAtJ,EAAA7K,MAAAwP,MAAA,GAmBD,GAhBAzM,EAAIgD,MAAM3B,iBACNiE,EAAAtF,EAAYmP,QAAKzS,EAALiS,EAAWtI,OAA3B,GACAoJ,EAAII,UAAY7P,EAAAgD,MAAhBnC,eACA4O,EAAMwB,UAAU,QACVE,EAAO1B,EAAK2B,YAAA9L,GACPtF,EAAA4C,kBAAc6J,MAjDvB,EAiDuB0E,EAAA1E,MACnBuE,IAKJvB,EAAAyB,SAAA5L,EAActF,EAAK4C,kBAAkB6J,MAvDrC,EAuDiDoE,GAClDS,EAAAtR,EAAA4C,kBAAA6J,MAAAgD,EAAA2B,YAAA9L,GAAAmH,MAAA,KAIDzM,EAAIgD,MAAA1B,eAGF,IAFFmO,EAAII,UAAY7P,EAAhBgD,MAAAnC,eACA4O,EAAAwB,UAAgB,OACR7I,EAAA,EAAMA,EAAKuG,EAALtI,OAAZ+B,IAAA,CACI9C,EAAAtF,EAAQmP,QAAKzS,EAAA0L,GAAjB,IACIwH,EAAA5P,EAAU4C,kBAAkB6J,MAC9BrE,EAAA,IAAQuG,EAAUtI,SACnBuJ,EAAAjB,EAAAvG,EAAA,IAGD,IAAImE,EAAIoC,EAAAvG,GACN,GAAAmE,EAAM8E,EAAQ,CACd,IAAI5E,EAAAmD,EAAcrD,EAChB+E,EAAA/E,EAAAE,IAEAgD,EAAI8B,OACJ9B,EAAI5D,KAAJU,EAAAM,EAAAJ,EAAAtM,GAEAsP,EAAI+B,OACJ/B,EAAIyB,SAAJ5L,EAAAiH,EA/EJ,EA+EIuE,GACDrB,EAAAgC,gBAQT9R,EAAIpB,UAAoBwG,iBAAM,WAC5B,UAAAvF,KAAA8L,MAAAC,MAGA,OAAA/L,KAAA8L,MAAAI,UAGAlM,KAAA6C,WAAA,CAIF,IAAIoN,EAAAjQ,KAAS+E,QAET0H,EAAOzM,KAAKoD,kBAAeqJ,OAC3ByF,EAAOxK,KAAKsE,IAAIhM,KAAK8L,MAAMI,SAASa,EAAG/M,KAAK8L,MAAMC,KAAKgB,GAEvDoF,EAAAzK,KAAYyE,IAAAnM,KAAA8L,MAAAI,SAAAa,EAAhB/M,KAAA8L,MAAAC,KAAAgB,GACAkD,EAAII,UAAJ,2BACAJ,EAAIS,YAAJ,2BACAT,EAAIU,YACJV,EAAIO,SAAA0B,EAAJ,EAAAC,EAAwBD,EAAxBzF,GArBFwD,EAAAmC,WAAAF,EAAA,EAAAC,EAAAD,EAAAzF,KAyBEtM,EAAUpB,UAAMqG,gBAAc,WAC5B,GAAApF,KAAAwD,MAAAxB,aAAA,CAIF,IAAAiO,EAAAjQ,KAAA+E,QAIMkI,EAAMjN,KAAKoD,kBAAkB6J,MAE7BV,EAAAvM,KAAAoD,kBAAwBkK,WAG9B2C,EAAIgB,KAAAjR,KAAYwD,MAAK7B,aAAM,+CAC3BsO,EAAII,UAAYrQ,KAAAwD,MAAhBlC,cACA2O,EAAIwB,UAAJ,OACAxB,EAAIS,YAAJ1Q,KAAmBwD,MAAnBlC,cACA2O,EAAIe,aAAY,MAChBf,EAAIoC,aAAA,EAAJ,IAEApC,EAAIqC,eAAM,EACV,IAAItG,EAAM1I,EAAA1E,QAAE4O,YAAYxN,KAAK8H,MAAM9G,MAAM,KAAOhB,KAAK8H,MAAL9G,KAAcyM,UAC1DtB,EAAA7I,EAAA1E,QAAoB4O,YAAYxN,KAAA8H,MAAhB7G,IAAA,KAApBjB,KAAA8H,MAAA7G,GAAAwM,UAGI8E,GAAiBpG,EAAKH,IADtBiB,GADJ,EAAkBgD,EAAA2B,YAAQ,eAA1B3E,QAGIuF,EAAaxS,KAAAyS,kBAADF,GACZG,EAAAF,GAAuBrG,EAALH,GAAoBiB,EACtC0F,EAAO3S,KAAA4S,UAAuB5G,EAAAwG,GAA0BA,EAExDK,EAlBkB,GAkBLF,EAA4B3G,IAAAG,EAAiBH,GAA9DiB,EACI6F,EAAA9S,KAAJ+S,YAAA5G,EAAAH,EAAAwG,EAAA,KACIQ,EAAe,EAKjB,IAJ2B,OAA3BhT,KAAAwJ,UAAAyJ,WACDD,EAAA,SAAAE,MAAAC,qBAGCR,EAAAxG,GAAA,CAEA8D,EAAIU,YACJV,EAAIW,OAAOiC,EAAMtG,EAAjB,GACA0D,EAAIY,OAAAgC,EAAJ,GACA5C,EAAIc,UAAJ,EAEAd,EAAAa,SAEA,IAAMsC,EAAA,IAAUF,KAAKP,EAAiBK,GAChCK,EAAUrT,KAAIoM,WAAYgH,EAAAN,GAC5BQ,EAASrD,EAAA2B,YAAgByB,GAASpG,MAAtC,EAEAgD,EAAAyB,SAAA2B,EAAmBR,EAAAS,EAAnB/G,EAAA,IACAoG,GAAAH,EACDK,GAAAH,KAIDvS,EAAIpB,UAAmByG,iBAAM,WAC3B,SAAAxF,KAAA8L,MAAAC,MAGA,OAAA/L,KAAA8L,MAAAI,UAGAlM,KAAA6C,WAAA,CAIF,IAAIoN,EAAAjQ,KAAO+E,QACX8D,EAAA7I,KAAA0C,KAAAmE,OAGI4F,EAAJzM,KAAAoD,kBAAAqJ,OACAwD,EAAIU,YACJV,EAAIW,OAAO5Q,KAAK8L,MAAMI,SAASa,EAAG,GAClCkD,EAAIY,OAAA7Q,KAAJ8L,MAAkBI,SAAWa,EAAAN,GAC7BwD,EAAIS,YAAJ1Q,KAAAwD,MAAAjC,eACA0O,EAAIoC,gBACJpC,EAAIc,UAAJ,EAEAd,EAAAa,SAEE9Q,KAAI4C,YAAJiG,EAAA,IACAoH,EAAIU,YACJV,EAAIsD,IAAAvT,KAAJ8L,MAAgBI,SAAWa,EAAA/M,KAAA8L,MAA3BI,SAAAmB,EAAA,MAAA3F,KAAA8L,OACAvD,EAAII,UAAJrQ,KAAAwD,MAAAjC,eACA0O,EAAIwD,OACLxD,EAAAc,UAAA,KAGH5Q,EAAApB,UAAAuG,mBAAA,WACE,IAAI9E,EAAMR,KACR,GAAAA,KAAAwD,MAAAxB,cAGAhC,KAAAyC,YAAA,CAIF,IAAAwN,EAAAjQ,KAAA+E,QAEApE,EAAAX,KAAAwD,MAAA7C,UAEMsM,EAAMjN,KAAKoD,kBAAkB6J,MAE7BV,EAAAvM,KAAAoD,kBAAwBkK,WAE9B2C,EAAIgB,KAAAjR,KAAYwD,MAAA7B,aAAhB,+CACAsO,EAAII,UAAY,UAChBJ,EAAIwB,UAAJ,OAEAxB,EAAIS,YAAJ,UACAT,EAAIe,aAAY,MAChBf,EAAIoC,aAAA,EAAJ,IACApC,EAAIqC,eAAJ,EAEArC,EAAIc,UAAM,EACV,IAAI/E,EAAM1I,EAAA1E,QAAE4O,YAAYxN,KAAK8H,MAAM9G,MAAM,KAAOhB,KAAK8H,MAAL9G,KAAcyM,UAC9DtB,EAAA7I,EAAA1E,QAAA4O,YAAAxN,KAAA8H,MAAA7G,IAAA,KAAAjB,KAAA8H,MAAA7G,GAAAwM,UAGEnK,EAAI1E,QAAAyJ,QAAYrI,KAAhByC,YAAA,SAAAmL,GAEAqC,EAAIoC,aAAU,EAAd,IACA,IAAIqB,KA0BF,GAzBA9F,EAAI+F,OAAAC,WACJ3D,EAAII,UAAJzC,EAAkB+F,OAAKC,UAFzB3D,EAGOS,YAAS9C,EAAL+F,OAAoBC,oBAC7BhG,EAAAiG,YAEA5D,EAAII,UAAJ,UAHKJ,EAIAS,YAAA,YAELgD,KACAzD,EAAII,UAAJ,UACDJ,EAAAS,YAAA,WAaDlQ,EAAAsT,cAAA7D,EAAArC,EAAA/B,KAAAG,EAAAG,EA1CoB,EA0CpBI,EAAAU,EAAAyG,GAEE9F,EAAAE,SAAK,CAWLtN,EAAAsT,cAAA7D,EAAArC,EAAAG,QAAA/B,EAAAG,EAvDkB,EAuDlBI,EAAAU,EAAAyG,GAEA,IAAIK,EAzDc,GAyDmBnG,EAAK/B,KAALG,IAADG,EAAwBH,GAAzBiB,EAEnC+G,EA3DkB,GA2DlBpG,EAAAG,QAAA/B,IAAAG,EAAAH,GAAAiB,EAEAgD,EAAIU,YACJV,EAAIW,OAAOmD,EAASxH,EAApB,GAEA0D,EAAIY,OAAAmD,EAAJzH,EAAA,GACA0D,EAAIc,UAAY,EAChBd,EAAIoC,gBACJpC,EAAAa,SAGE,GAAA4C,IACAzD,EAAI8B,OACJ9B,EAAII,UAAJ,UACAJ,EAAIM,YAAS,GACbN,EAAIO,SAAJuD,EAAA,EAAAC,EAAAD,EAAApT,GACAsP,EAAIa,SACLb,EAAAgC,gBAML9R,EAAWpB,UAAA+U,cAAuB,SAAD7D,EAAmBgE,EAAcjI,EAAlEG,EAAA+H,EAAA3H,EAAAU,EAAAyG,GAEA,IAAAb,EAAAqB,GAAAD,EAAAjI,IAAAG,EAAAH,GAAAiB,EAeE,GAbFgD,EAAIc,UAAJ,EACAd,EAAIU,YACJV,EAAIW,OAAOiC,EAAMtG,EAAjB,GACA0D,EAAIY,OAAJgC,EAAA,GAEA5C,EAAAa,SAEAb,EAAIW,OAAOiC,EAAO,EAAGtG,GACrB0D,EAAIY,OAAOgC,EAAO,EAAGtG,EAAM,GAC3B0D,EAAIY,OAAJgC,EAAA,EAAAtG,EAAA,GAEA0D,EAAAwD,OAEM,GAAJC,EAAc,CACd,IACIJ,EAASrD,EAAA2B,YADC,KACwB3E,MAAtC,EACDgD,EAAAyB,SAFe,IAEfmB,EAAAS,EAAA/G,EAAA,MApjCIpM,EAAAgU,YAAa,uBAsjCtBhU,EAAAiU,cAxjCgCjU,EAAhC,CAAAxB,EA0jC6B0V,kjBCxnCQA,EAAA,SAAAjU,GAajC,SAAAiU,EAAAhU,EAAAC,GACA,IAAAE,EAAAJ,EAAa/C,KAAA2C,KAAAK,EAAAC,IAAAN,KAgBf,OAfIQ,EAAAkC,KAAA,KACAlC,EAAAsL,OAFFI,SAAA,KAIAH,KAAK,MAGLvL,EAAK4F,YAAU8B,EAAWtJ,SAAK,+BAC/B4B,EAAKiD,OAAOC,GAAG,oBAAelD,EAAS8T,kBAAvC5V,KAAA8B,IAEAA,EAAKiD,OAAAC,GAAA,UAALlD,EAAAsD,UAAApF,KAAA8B,IACAA,EAAIiD,OAAOC,GAAA,SAAAlD,EAAqBoD,SAAhClF,KAA2C8B,IACzCA,EAAAqP,kBAAK,WACNnD,OAAA6H,gEAGH/T,SArBAyD,EAAAoQ,EAAAjU,GACAiU,EACEnQ,SAAA,SAAM,aAqBNmQ,EAAAtV,UAAAuV,kBAAA,WAGFtU,KAAAmK,UAEEkK,EAAAtV,UAAA+E,UAAA,WAGF9D,KAAAmK,UAGIkK,EAAQtV,UAAI6E,SAAZ,WACA,GAAA5D,KAAA+E,QAAA,CAMFP,QAAIC,IAAA,gBAAuBzE,KAAd8L,OACb,IAAIO,EAAArM,KAAQgP,KAAK1C,wBACjBG,EAAY/E,KAAZyE,IAAoBnM,KAApByM,OAAA,KACAQ,EAAYZ,EAAAY,MAEZjN,KAAImI,OAAA8E,MAAUA,EAEdjN,KAAImI,OAAMsE,OAAKA,EACf,IAAI+H,EAAJ/H,EAAA,EACIwD,EAAAjQ,KAAA+E,QAEJkL,EAAIc,UAAJ,EACAd,EAAIe,aAAW,SACb,IAAAnF,EAAO,GAYL,GAXH,MAAA7L,KAAA8L,MAAAI,WAEGL,EAAA7L,KAAYwJ,UAAhB4C,cAAApG,EAAApH,SAAAoB,KAAA8L,MAAAI,SAAAD,MAEAgE,EAAII,UAAY,UAChBJ,EAAIO,SAAO,IAAAvD,EAAAR,GACXwD,EAAII,UAAY,UAChBJ,EAAIgB,KAAA,iDAEJhB,EAAIwB,UAAW,OACbxB,EAAAyB,SAAS,WAAL7F,EAAJ,GAA6B2I,GAChB,MAAXxU,KAAA8L,MAAII,SACJ,GAAW,MAAXlM,KAAI8L,MAAOC,KAAc,CAEzB,IAAAmG,EAAAxK,KAAAsE,IAAAhM,KAAA8L,MAAAI,SAAAa,EAAA/M,KAAA8L,MAAAC,KAAAgB,GACIoF,EAAAzK,KAAAyE,IAAAnM,KAAA8L,MAA2BI,SAAAa,EAAA/M,KAA/B8L,MAAAC,KAAAgB,GAEAkD,EAAIwE,yBAAJ,kBACAxE,EAAII,UAAY,2BAChBJ,EAAIU,YAEJV,EAAIO,SAAJ,IAAA0B,EAAAzF,GACAwD,EAAIwD,OACJxD,EAAIU,YACJV,EAAIO,SAAA2B,EAAA,EAAAlF,EAAJR,GAdFwD,EAeOwD,OACLxD,EAAIwE,yBAAJ,mBAEAxE,EAAIS,YAAY,OAChBT,EAAIU,YACJV,EAAIW,OAAA5Q,KAAY8L,MAAhBI,SAAAa,EAAA,GACAkD,EAAIY,OAAJ7Q,KAAA8L,MAAAI,SAAAa,EAAAN,GAEAwD,EAAIc,UAAJ,EACAd,EAAIa,SACJb,EAAIU,YACJV,EAAIW,OAAA5Q,KAAJ8L,MAAkBI,SAAlBa,EAAA,GACAkD,EAAIY,OAAA7Q,KAAY8L,MAAhBI,SAAAa,EAAAN,GACAwD,EAAIS,YAAJ,UACDT,EAAAc,UAAA,EACFd,EAAAa,cA3DAtM,QAAAC,IAAA,gBAgEF4P,EAFDtV,UAAA0H,QAAA,WAIAzG,KAAAoG,SAAAM,UAEE2N,EAAWtV,UAAA2V,iBAAY,SAAvBhJ,GACA,IAAImB,EAAQ7M,KAAZ8H,MAAqB7G,GAAAjB,KAAA8H,MAAA9G,KACjBqL,EAAKrM,KAAKmI,OAAMmE,wBAChBS,EAAIrB,EAAIwC,QAEZjC,EAAOjM,KAAA8H,MAAA9G,KAAA6L,GAAAE,EAAAhG,WAAAsF,EAAAY,QACLI,EADK3B,EAAAiJ,QAAAtI,EAAAE,IAEL,OACAQ,IACAM,IACAuH,KAAKvH,EAAAtG,WAAAsF,EAAAI,QALPR,KAPFP,QAkBC2I,EAFDtV,UAAAmO,aAAA,SAAAxB,EAAAyB,EAAAxB,GAIAnH,QAAAC,IAAA,QAAAiH,EAAAyB,EAAAxB,IAEE0I,EAAAtV,UAAAoP,eAAA,SAAAC,EAAAC,GAFF7J,QAAAC,IAAA,iBAAA2J,EAAAC,GAKArO,KAAAmK,UAECkK,EAFDtV,UAAA8P,qBAAA,SAAA/G,EAAAuG,GAIA7J,QAAAC,IAAA,eAAAqD,EAAAuG,IACEgG,EAAYtV,UAAU8V,KAAA,SAAVC,EAAZC,EAAAC,EAAAC,GACA,IAAAzU,EAAAR,KACAA,KAAKgP,KAAK+F,EAAAlH,KAAY,gBAAtB,GAEA7N,KAAAmI,OAAA+M,SAAEC,cAAa,UACfnV,KAAAgP,KAAAoG,YAAEpV,KAAKmI,WAEPD,EAAAtJ,SAAAoB,KAAAmI,QAAAC,IAAA,uBAEAF,EAAAtJ,SAAoBoB,KAAOgP,MAAA5G,IAAZ,QAAf,QAIIpI,KAAA+E,QAAU/E,KAAVmI,OAAiBkN,WAAA,MACfrV,KAAAmI,OAAAmN,iBAAQ,qBAAA5J,GACT,GAAAlL,EAAAsH,MAAA,CAICtH,EAAAsL,MAAKI,SAAA1L,EAAAkU,iBAAAhJ,GACH,IAAA9F,GACAD,KACAY,MAAGmF,EAAKnF,MACRC,MAAGkF,EAAKlF,MACRuG,EAAAvM,EAAAsL,MAAWI,SAAWD,GACtBoB,EAAA7M,EAAAsL,MAAWI,SAAWmB,EAPfb,UAAAhM,EAAAsL,MAAAI,SAAA0I,KASTW,UATS/U,EAAAsL,MAAAI,SAAAsJ,MAAX9J,MAYAlI,MAAAhD,EAAAgD,OAEEsL,EAAAlQ,QAAAmQ,KAAE,cAAanJ,GAChB,MAAApF,EAAAsL,MAAAC,SAvBL7D,EAAAtJ,SAAA4B,EAAA2H,QAAAC,IAAA,6BAgCMpI,KAAAmI,OAAAmN,iBAAA,oBAAA5J,GACA,MAAAlL,EAAKsL,MAAAC,OACLvL,EAAKsL,MAAAI,SAAL,KACA1L,EAAAoD,WACDpD,EAAA4F,SAAAM,SARLoI,EAAAlQ,QAAAmQ,KAAA,2BAuBI/O,KAAAmI,OAAImN,iBAAoB,YAAa,SAAA5J,SACnC1L,KAAAmI,OAAAmN,iBAAA,sBAAA5J,GACAlL,EAAKsL,MAAMC,OAAOL,EAAlB+J,UACAjV,EAAKsL,MAAAI,SAAL,KACA1L,EAAKsL,MAAAC,KAAS,KACdvL,EAAAoD,WACDpD,EAAA4F,SAAAM,SACDoI,EAAAlQ,QAAEmQ,KAAK,yBAKN7G,EAAOtJ,SAAA4B,EACV2H,QACAC,IAAA,yBAQEpI,KAAAmI,OAAKmN,iBAAiB,UAAtB,SAAA5J,SACA1L,KAAAmI,OAAKmN,iBAAL,oBAAA5J,GACAlL,EAAKsL,MAAAI,SAAL,KACA1L,EAAKsL,MAAAC,KAAS,KACdvL,EAAAoD,WAEApD,EAAA4F,SAAYM,SAEdoI,EAXFlQ,QAAAmQ,KAAA,qBAcAvK,QAAAC,IAAA,uBAKIqK,EAAIlQ,QAAS8E,GAAM,cAAa,SAAW2K,GAEzC,IAAAqH,EAAArH,EAAA7K,MAAAmS,KAAAnV,EAAAgD,MAAAmS,GACD,IAAAnV,EAAAgJ,UAAAoM,4BAAAF,KAKAlV,EAAAqV,6BAAA,CAKG,IAAAH,EAAA,CACA,IAAArH,EAAA1I,IAAAoH,IAAAvM,EAAAsH,MAIE,OAEJ,IAAImE,EAAAoC,EAAU1I,IAAAoH,EACVV,EAAM7L,EAAK2H,OAAKmE,wBAEpBO,EAAWrM,EAAXsH,MAAsB7G,GAAAT,EAAAsH,MAAA9G,KACpB+L,GADoBd,EAAAzL,EAAAsH,MAAA9G,MAAA6L,EAAAR,EAAAY,MAEpBzM,EAAAsL,MAAGI,UACHa,IACAM,EAAAgB,EAJoB1I,IAAA6G,UAAAH,EAAAI,OAKpBmI,KAAMvG,EAAA1I,IAAA6G,UALRP,KAOA6J,KAAAzH,GAYN7N,EAAA0M,aAAAmB,EACEqH,IAAAlV,EACAgJ,UAACuM,2BAAWL,KACVZ,GACAhG,EAAKlQ,QAAL8E,GAAkB,oBAAlB,SAAA2K,EAAAzI,GACApF,EAAKsL,MAALI,SAAA,KACA1L,EAAKsL,MAAAC,KAAS,KAEhBvL,EARF2J,SAWA3J,EAAA4F,SAAAM,UACAoO,IAWAT,EAAItV,UAAUgU,YAAd,SAAAjL,EAAAkO,GAIC,OAAAA,GAAA,GACG,WAEHA,GAAA,MAAAlO,GALG,MAMA,QAEHkO,GAAA,IACG,cAEHA,GAAA,SAAAlO,GAVQ,QAWF,QAGT,SAGEuM,EAAItV,UAAiB0T,kBAAI,SAAAF,GACvB,IAAA0D,EAAA1D,EAAA,IACD,OAAA0D,GAAA,GAEG,IAEHA,GAAA,GAEG,IAEHA,GAAA,IAEG,IAEHA,GAAA,IAEG,IAEHA,GAAA,KAEG,KAEHA,GAAA,KAEG,KAEHA,GAAA,KAEG,KAEHA,GAAA,KAEG,KAEHA,GAAA,MAEG,MAEHA,GAAA,MAEG,MAEHA,GAAA,MAEG,MAEHA,GAAA,OAEG,OAEHA,GAAA,OAEG,OAEHA,GAAA,OAEU,OAGb,SAEE5B,EAAOtV,UAAP6T,UAAA,SAAAsD,EAAAC,GAGF,OALAD,IAAAC,GAoBE9B,EAAMtV,UAAWqN,WAAA,SAA6B5O,EAAA4Y,GAC9C,IAAIC,GAAS,MAAY,YAAY,uDACnCC,GAAS,MAAS,MAAlB,+BACD,sBAAA9Y,EAAA+Y,SAEG,OAAJ/Y,EAAA+Y,SAAAH,GAEA,IAKEI,EALExY,KACAyY,KACAC,EAAJlZ,EAAAmZ,WAEIC,EAAAF,EAAY,GAGdF,EAHFE,EAEW,GACCA,EAAV,GACK,GAAAA,EACK,GAGZA,EAGE,QAAIxZ,EAAA,EAAQA,EAAAkZ,EAAAvP,SAAA3J,EAAA,CACV,IAAAK,EAAA6Y,EAAQS,OAAR3Z,GACE,GAAAuZ,EAAA,CACE,OAAAlZ,GACA,QACFA,EAAA,GAAA+Y,EAAA9Y,EAAAsZ,UACE,MACA,QACFvZ,EAAA,GAAA8Y,EAAA7Y,EAAAuZ,YACE,MACA,QACFxZ,EAAAyC,KAAAgX,QAAAxZ,EAAAyZ,UAAA,IACE,MACA,QACF1Z,EAAAyC,KAAUgX,QAAAxZ,EAAAyZ,UAAA,KACV,MACE,QACA,QACF1Z,EAAAyC,KAAAgX,QAAAN,EAAA,MACE,MACA,QACFnZ,EAAAyC,KAAAgX,QAAAR,EAAA,MACE,MACA,QACFjZ,EAAAyC,KAAAgX,QAAAR,EAAA,KACE,MACA,QACFjZ,EAAAyC,KAAAgX,QAAAxZ,EAAAuZ,WAAA,MACE,MACA,QACFxZ,EAAAyC,KAAAgX,QAAAxZ,EAAA0Z,aAAA,MACA,MAEE,QACF3Z,EAAA,IAAAmK,KAAAC,MAAAnK,EAAAuZ,WAAA,MACE,MACA,QACFxZ,EAAAyC,KAAAgX,QAAAxZ,EAAA2Z,aAAA,MACE,MACA,QACF5Z,EAAAyC,KAAAgX,QAAAxZ,EAAA4Z,cAAA,UACE,MACA,QACF7Z,EAAA,GAAAC,EAAA4Z,cACE,MACA,QACF7Z,EAAAqZ,EAAA,UACE,MACA,QACFrZ,EAAAqZ,EAAA,UACE,MACA,QAlDJrZ,EAAA,GAAAC,EAAAsZ,SADF9Y,EAAAiL,KAuDO1L,GACLkZ,SAEO,KAFPlZ,EAGEkZ,KAEHzY,EAAAiL,KAAA1L,GAML,OAAAS,EAAAqZ,KAAA,KAEEhD,EAAYtV,UAAOiY,QAAa,SAAhCrY,EAAA2Y,GAGJ,OAFI3Y,EAAA,GAASA,EAHX2Y,EAAA,UAAAA,EAAA,IAAAA,GAKF,GAAA3Y,EAAAkI,OAAAyQ,EAAA3Y,OAlfqC,CAAAA,EAAA4Y,kBAAApY,EAAAkV,gBAAAzU,GCXrC,SAAA3C,EAAAD,sJCEA,SAAAwa,GAAA,OAAAA,KAAAlZ,WAAAkZ,GAAA5Y,QAAA4Y,GAAA,CAAAA,MAGEC,EAGE,SAAA3R,EAAA8F,GACA5L,KAAKkG,GAAL,EACDlG,KAAA8F,MACH9F,KAAA4L,SAEA5O,EAAAya,YAEE,IAAAC,EACA,SAAA5R,GACA9F,KAAAkG,GAAA,EAGElG,KAAK+F,MAAM,EACZ/F,KAAAsL,IAAA,EACHtL,KAAA8F,OAEA9I,EAAA0a,cASqB,IAAA/O,EAAA,WARnB,SAAAA,EAAAlL,GACAuC,KAAAvC,OACAuC,KAAAuL,WACAvL,KAAAsK,cACAtK,KAAA2X,KAAA,KACA3X,KAAA4X,OACA5X,KAAA6X,gBAAA,EAE2B7X,KAAA8X,oBAAA,EAE3B9X,KAAA6M,QAAA,SAIIlE,EAAK5J,UAAOgK,IAAA,SAAAkD,EAAAnG,GACV,GADU,MACV9F,KAAA2X,KACA3X,KAAA2X,MACA7R,IAAIA,EAHN8F,MAAAK,EAKA/F,GAAK,GAELlG,KAAAuL,QAAYtC,KAAAjJ,KAAA2X,UACZ,IAAA1L,IAAAjM,KAAA2X,KAAA/L,MAEA,YAJKpH,QAGAC,IAAA,sCAAAwH,EAAAnG,GAOH,GAJD,IAAA9F,KAAAuL,QAAA1E,SAEG7G,KAAK4X,IAAK3L,EAAKjM,KAAf2X,KAAyB/L,OAE3BK,EAAAjM,KAAA2X,KAAA/L,QAAA5L,KAAA4X,IAGF,YAFCpT,QAAAC,IAAA,0BAAAwH,EAAAnG,GAKGA,IAAA9F,KAAA2X,KAAU7R,IADZ9F,KAGK4X,IAGA5X,KAAA2X,KAAAzR,GAAA+F,EAAAjM,KAAA2X,KAAA/L,MAFH5L,KAAK2X,KAAK/L,MAAKK,GAKfjM,KAAA2X,MACA7R,IAAIA,EAHN8F,MAAAK,EAKA/F,GAAK,GAERlG,KAAAuL,QAAAtC,KAAAjJ,KAAA2X,SAIDhP,EAAS5J,UAAQiK,OAAY,SAAAiM,GAC3B,IAAAzU,EAAQR,KACR,GAAAA,KAAAuL,QAAA1E,OAAA,EACDrC,QAAAC,IAAA,wBADC,CAWA,GANAzE,KAAA4X,MACD5X,KAAA2X,KAAA3X,KAAAuL,QAAA,GAEDjI,EAAA1E,QAAAmZ,QAAA/X,KAAAuL,UAGEvL,KAAA2X,KAAA/L,MAAAqJ,EAAAnN,MAAA7G,GAAA,CACA,IAAA+W,EAAAhY,KAAA2X,KAAA/L,MAAA5L,KAAA2X,KAAAzR,GAAA,EAOElG,KAAAuL,QAAOtC,MACPnD,IAAI,GAHN8F,MAAAoM,EAKD9R,GAAA,IAIDlG,KAAI6X,gBAAkB,EAIpB,IAHF,IAAAI,EAAA,IAAgBC,IACdP,EAAI3X,KAAKuL,QAAK,GAEVrO,EAAI,EAAAA,EAAK8C,KAAbuL,QAAA1E,OAAA3J,IAAA,CACA,IAAIsR,EAAIxO,KAAGuL,QAAXrO,GACIgC,EAAIyY,EAAK/L,MACXzM,EAAIqP,EAAA5C,MAYF,GAbJ1M,EAEO+V,EAAInN,MAAI9G,KACb9B,EAAA+V,EAAKnN,MAAA9G,KACN9B,EAAA+V,EAAAnN,MAAA7G,IAEGjB,KAAI6X,kBAEP1Y,EAAA8V,EAAAnN,MAAA7G,KAED9B,EAAA8V,EAAUnN,MAAV7G,IAEE0W,EAAAzR,GAAI/G,EAAAD,EACFyY,EAAAzR,GAAI,EACJ,GAAA+R,EAAQ3Q,IAAKqQ,EAAb7R,KAAA,CACA,IAAEyE,EAAF0N,EAAAla,IAAA4Z,EAAA7R,KAHFyE,EAAArE,IAIOyR,EAAAzR,GACLqE,EAAAxE,aAEHkS,EAAAE,IAAAR,EAAA7R,SAAA6R,EAAA7R,IAAAI,GAAAyR,EAAAzR,GAAAH,MAAA,EAAAuF,IAAA,IAICqM,EAAAnJ,EAGJ,IAAA3B,EAASoI,EAAQnN,MAAA7G,GAACgU,EAAoBnN,MAAQ9G,KAC5ChB,KAAA6M,UACAoL,EAAA5P,QAAK,SAAgBlK,EAArBM,GAFFN,EAAAmN,IAAAnN,EAAA+H,GAAA2G,EAIArM,EAAK8J,WAAArB,KAAL9K,KAGE6B,KAAA8X,oBAAkBxU,EAAA1E,QAAEwZ,KAAQpY,KAAKsK,YAClC2K,EAAApS,aArEH7C,KAAAsK,WAAAhH,EAAA1E,QAAAyZ,QAAArY,KAAAsK,YAAA,mBA0EI3B,EAAOkB,cAAP,SAAAnH,EAAAuS,GACD,MAAAvS,EAAAmE,OAEG,OAAAnE,EAAyB,GAE7B,IAAI4V,EAAA,IAAW3P,EAAf,UACAkE,EAAA,EACEoL,EAAO,IAAAC,IAuBb,OAtBM5U,EAAA1E,QAAayJ,QAAb3F,EAAA,SAAApF,GAEAgb,EAAAT,iBAAUva,EAAEua,gBACVhL,GAAIvP,EAAAuP,QACFvJ,EAAA1E,QAAQyJ,QAAS/K,EAAAgN,WAAjB,SAAAiO,GACA,GAAAN,EAAQ3Q,IAAIiR,EAAZzS,KAAA,CACA,IAAEyE,EAAF0N,EAAela,IAAfwa,EAAAzS,KACAyE,EAAArE,IAAAqS,EAAArS,GAJFqE,EAAAxE,OAKOwS,EAAAxS,WANTkS,EAAAE,IAAAI,EAAAzS,SAAAyS,EAAAzS,IAAAI,GAAAqS,EAAArS,GAAAH,MAAAwS,EAAAxS,MAAAuF,IAAA,QAcAgN,EAAAzL,QAAYA,EACZoL,EAAA5P,QAAO,SAAgBlK,EAAvBM,GAFFN,EAAAmN,IAAAnN,EAAA+H,GAAA2G,EAIAyL,EAAOhO,WAAArB,KAAP9K,KA7BKma,EAAAR,oBAAAxU,EAAA1E,QAAAwZ,KAAAE,EAAAhO,YAgCTgO,KApJqB,GAAAnZ,EAAAwJ,eAAAhJ,GCjCrB,SAAA1C,EAAAD","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","///<reference path=\"../node_modules/grafana-sdk-mocks/app/headers/common.d.ts\" />\n\nimport {CanvasPanelCtrl} from './canvas-metric';\nimport {DistinctPoints} from './distinct-points';\n\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\n\nimport appEvents from 'app/core/app_events';\n\nconst grafanaColors = [\n  '#FFFFFF',\n  '#7EB26D',\n  '#EAB839',\n  '#6ED0E0',\n  '#EF843C',\n  '#E24D42',\n  '#1F78C1',\n  '#BA43A9',\n  '#705DA0',\n  '#508642',\n  '#CCA300',\n  '#447EBC',\n  '#C15C17',\n  '#890F02',\n  '#0A437C',\n  '#6D1F62',\n  '#584477',\n  '#B7DBAB',\n  '#F4D598',\n  '#70DBED',\n  '#F9BA8F',\n  '#F29191',\n  '#82B5D8',\n  '#E5A8E2',\n  '#AEA2E0',\n  '#629E51',\n  '#E5AC0E',\n  '#64B0C8',\n  '#E0752D',\n  '#BF1B00',\n  '#0A50A1',\n  '#962D82',\n  '#614D93',\n  '#9AC48A',\n  '#F2C96D',\n  '#65C5DB',\n  '#F9934E',\n  '#EA6460',\n  '#5195CE',\n  '#D683CE',\n  '#806EB7',\n  '#3F6833',\n  '#967302',\n  '#2F575E',\n  '#99440A',\n  '#58140C',\n  '#052B51',\n  '#511749',\n  '#3F2B5B',\n  '#E0F9D7',\n  '#FCEACA',\n  '#CFFAFF',\n  '#F9E2D2',\n  '#FCE2DE',\n  '#BADFF4',\n  '#F9D9F9',\n  '#DEDAF7',\n]; // copied from public/app/core/utils/colors.ts because of changes in grafana 4.6.0\n//(https://github.com/grafana/grafana/blob/master/PLUGIN_DEV.md)\n\nclass DiscretePanelCtrl extends CanvasPanelCtrl {\n  static templateUrl = 'partials/module.html';\n  static scrollable = true;\n\n  defaults = {\n    display: 'timeline', // or 'stacked'\n    rowHeight: 50,\n    valueMaps: [{value: 'null', op: '=', text: 'N/A'}],\n    rangeMaps: [{from: 'null', to: 'null', text: 'N/A'}],\n    colorMaps: [{text: 'N/A', color: '#CCC'}],\n    metricNameColor: '#000000',\n    valueTextColor: '#000000',\n    timeTextColor: '#d8d9da',\n    crosshairColor: '#8F070C',\n    backgroundColor: 'rgba(128,128,128,0.1)',\n    lineColor: 'rgba(0,0,0,0.1)',\n    textSize: 24,\n    textSizeTime: 12,\n    extendLastValue: true,\n    writeLastValue: true,\n    writeAllValues: false,\n    writeMetricNames: false,\n    showTimeAxis: true,\n    showLegend: true,\n    showLegendNames: true,\n    showLegendValues: true,\n    showLegendPercent: true,\n    highlightOnMouseover: true,\n    expandFromQueryS: 0,\n    legendSortBy: '-ms',\n    units: 'short',\n  };\n\n  annotations: any = [];\n  data: DistinctPoints[] = null;\n  legend: DistinctPoints[] = null;\n\n  externalPT = false;\n  isTimeline = true;\n  isStacked = false;\n  hoverPoint: any = null;\n  colorMap: any = {};\n  unitFormats: any = null; // only used for editor\n  formatter: any = null;\n\n  _colorsPaleteCash: any = null;\n  _renderDimensions: any = {};\n  _selectionMatrix: Array<Array<String>> = [];\n\n  /** @ngInject */\n  constructor($scope, $injector, public annotationsSrv) {\n    super($scope, $injector);\n\n    // defaults configs\n    _.defaultsDeep(this.panel, this.defaults);\n    this.panel.display = 'timeline'; // Only supported version now\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('panel-initialized', this.onPanelInitialized.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n  }\n\n  onPanelInitialized() {\n    this.updateColorInfo();\n    this.onConfigChanged();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  onDataError(err) {\n    this.annotations = [];\n    console.log('onDataError', err);\n  }\n\n  onInitEditMode() {\n    this.unitFormats = kbn.getUnitFormats();\n\n    this.addEditorTab(\n      'Options',\n      'public/plugins/natel-discrete-panel/partials/editor.options.html',\n      1\n    );\n    this.addEditorTab(\n      'Legend',\n      'public/plugins/natel-discrete-panel/partials/editor.legend.html',\n      3\n    );\n    this.addEditorTab(\n      'Colors',\n      'public/plugins/natel-discrete-panel/partials/editor.colors.html',\n      4\n    );\n    this.addEditorTab(\n      'Mappings',\n      'public/plugins/natel-discrete-panel/partials/editor.mappings.html',\n      5\n    );\n    this.editorTabIndex = 1;\n    this.refresh();\n  }\n\n  onRender() {\n    if (this.data == null || !this.context) {\n      return;\n    }\n\n    this._updateRenderDimensions();\n    this._updateSelectionMatrix();\n    this._updateCanvasSize();\n    this._renderRects();\n    this._renderTimeAxis();\n    this._renderLabels();\n    this._renderAnnotations();\n    this._renderSelection();\n    this._renderCrosshair();\n\n    this.renderingCompleted();\n  }\n\n  showLegandTooltip(pos, info) {\n    let body = '<div class=\"graph-tooltip-time\">' + info.val + '</div>';\n\n    body += '<center>';\n    if (info.count > 1) {\n      body += info.count + ' times<br/>for<br/>';\n    }\n    body += moment.duration(info.ms).humanize();\n    if (info.count > 1) {\n      body += '<br/>total';\n    }\n    body += '</center>';\n\n    this.$tooltip.html(body).place_tt(pos.pageX + 20, pos.pageY);\n  }\n\n  clearTT() {\n    this.$tooltip.detach();\n  }\n\n  formatValue(val): string {\n    if (_.isNumber(val)) {\n      if (this.panel.rangeMaps) {\n        for (let i = 0; i < this.panel.rangeMaps.length; i++) {\n          let map = this.panel.rangeMaps[i];\n\n          // value/number to range mapping\n          let from = parseFloat(map.from);\n          let to = parseFloat(map.to);\n          if (to >= val && from <= val) {\n            return map.text;\n          }\n        }\n      }\n\n      // Convert it to a string first\n      if (this.formatter) {\n        val = this.formatter(val, this.panel.decimals);\n      }\n    }\n\n    let isNull = _.isNil(val);\n    if (!isNull && !_.isString(val)) {\n      val = val.toString(); // convert everything to a string\n    }\n\n    for (let i = 0; i < this.panel.valueMaps.length; i++) {\n      let map = this.panel.valueMaps[i];\n      // special null case\n      if (map.value === 'null') {\n        if (isNull) {\n          return map.text;\n        }\n        continue;\n      }\n\n      if (val === map.value) {\n        return map.text;\n      }\n    }\n\n    if (isNull) {\n      return 'null';\n    }\n    return val;\n  }\n\n  getColor(val) {\n    if (_.has(this.colorMap, val)) {\n      return this.colorMap[val];\n    }\n    if (this._colorsPaleteCash[val] === undefined) {\n      let c = grafanaColors[this._colorsPaleteCash.length % grafanaColors.length];\n      this._colorsPaleteCash[val] = c;\n      this._colorsPaleteCash.length++;\n    }\n    return this._colorsPaleteCash[val];\n  }\n\n  randomColor() {\n    let letters = 'ABCDE'.split('');\n    let color = '#';\n    for (let i = 0; i < 3; i++) {\n      color += letters[Math.floor(Math.random() * letters.length)];\n    }\n    return color;\n  }\n\n  // Override the\n  applyPanelTimeOverrides() {\n    super.applyPanelTimeOverrides();\n\n    if (this.panel.expandFromQueryS && this.panel.expandFromQueryS > 0) {\n      let from = this.range.from.subtract(this.panel.expandFromQueryS, 's');\n      this.range.from = from;\n      this.range.raw.from = from;\n    }\n  }\n\n  onDataReceived(dataList) {\n    $(this.canvas).css('cursor', 'pointer');\n\n    let data: DistinctPoints[] = [];\n    _.forEach(dataList, metric => {\n      if ('table' === metric.type) {\n        if ('time' !== metric.columns[0].type) {\n          throw new Error('Expected a time column from the table format');\n        }\n        for (let i = 1; i < metric.columns.length; i++) {\n          let res = new DistinctPoints(metric.columns[i].text);\n          for (let j = 0; j < metric.rows.length; j++) {\n            let row = metric.rows[j];\n            res.add(row[0], this.formatValue(row[i]));\n          }\n          res.finish(this);\n          data.push(res);\n        }\n      } else {\n        let res = new DistinctPoints(metric.target);\n        _.forEach(metric.datapoints, point => {\n          res.add(point[1], this.formatValue(point[0]));\n        });\n        res.finish(this);\n        data.push(res);\n      }\n    });\n    this.data = data;\n    this.updateLegendMetrics();\n\n    // Annotations Query\n    this.annotationsSrv\n      .getAnnotations({\n        dashboard: this.dashboard,\n        panel: this.panel, // {id: 4}, //\n        range: this.range,\n      })\n      .then(\n        result => {\n          this.loading = false;\n          if (result.annotations && result.annotations.length > 0) {\n            this.annotations = result.annotations;\n          } else {\n            this.annotations = null;\n          }\n          this.onRender();\n        },\n        () => {\n          this.loading = false;\n          this.annotations = null;\n          this.onRender();\n          console.log('ERRR', this);\n        }\n      );\n  }\n\n  updateLegendMetrics(notify?: boolean) {\n    if (\n      !this.data ||\n      !this.panel.showLegend ||\n      this.panel.showLegendNames ||\n      this.data.length <= 1\n    ) {\n      this.legend = this.data;\n    } else {\n      this.legend = [DistinctPoints.combineLegend(this.data, this)];\n    }\n\n    if (notify) {\n      this.onConfigChanged();\n    }\n  }\n\n  removeColorMap(map) {\n    let index = _.indexOf(this.panel.colorMaps, map);\n    this.panel.colorMaps.splice(index, 1);\n    this.updateColorInfo();\n  }\n\n  updateColorInfo() {\n    let cm = {};\n    for (let i = 0; i < this.panel.colorMaps.length; i++) {\n      let m = this.panel.colorMaps[i];\n      if (m.text) {\n        cm[m.text] = m.color;\n      }\n    }\n    this._colorsPaleteCash = {};\n    this._colorsPaleteCash.length = 0;\n    this.colorMap = cm;\n    this.render();\n  }\n\n  addColorMap(what) {\n    if (what === 'curent') {\n      _.forEach(this.data, metric => {\n        if (metric.legendInfo) {\n          _.forEach(metric.legendInfo, info => {\n            if (!_.has(this.colorMap, info.val)) {\n              let v = {text: info.val, color: this.getColor(info.val)};\n              this.panel.colorMaps.push(v);\n              this.colorMap[info.val] = v;\n            }\n          });\n        }\n      });\n    } else {\n      this.panel.colorMaps.push({text: '???', color: this.randomColor()});\n    }\n    this.updateColorInfo();\n  }\n\n  removeValueMap(map) {\n    let index = _.indexOf(this.panel.valueMaps, map);\n    this.panel.valueMaps.splice(index, 1);\n    this.render();\n  }\n\n  addValueMap() {\n    this.panel.valueMaps.push({value: '', op: '=', text: ''});\n  }\n\n  removeRangeMap(rangeMap) {\n    let index = _.indexOf(this.panel.rangeMaps, rangeMap);\n    this.panel.rangeMaps.splice(index, 1);\n    this.render();\n  }\n\n  addRangeMap() {\n    this.panel.rangeMaps.push({from: '', to: '', text: ''});\n  }\n\n  onConfigChanged(update = false) {\n    this.isTimeline = this.panel.display === 'timeline';\n    this.isStacked = this.panel.display === 'stacked';\n\n    this.formatter = null;\n    if (this.panel.units && 'none' !== this.panel.units) {\n      this.formatter = kbn.valueFormats[this.panel.units];\n    }\n\n    if (update) {\n      this.refresh();\n    } else {\n      this.render();\n    }\n  }\n\n  getLegendDisplay(info, metric) {\n    let disp = info.val;\n    if (\n      this.panel.showLegendPercent ||\n      this.panel.showLegendCounts ||\n      this.panel.showLegendTime\n    ) {\n      disp += ' (';\n      let hassomething = false;\n      if (this.panel.showLegendTime) {\n        disp += moment.duration(info.ms).humanize();\n        hassomething = true;\n      }\n\n      if (this.panel.showLegendPercent) {\n        if (hassomething) {\n          disp += ', ';\n        }\n\n        let dec = this.panel.legendPercentDecimals;\n        if (_.isNil(dec)) {\n          if (info.per > 0.98 && metric.changes.length > 1) {\n            dec = 2;\n          } else if (info.per < 0.02) {\n            dec = 2;\n          } else {\n            dec = 0;\n          }\n        }\n        disp += kbn.valueFormats.percentunit(info.per, dec);\n        hassomething = true;\n      }\n\n      if (this.panel.showLegendCounts) {\n        if (hassomething) {\n          disp += ', ';\n        }\n        disp += info.count + 'x';\n      }\n      disp += ')';\n    }\n    return disp;\n  }\n\n  //------------------\n  // Mouse Events\n  //------------------\n\n  showTooltip(evt, point, isExternal) {\n    let from = point.start;\n    let to = point.start + point.ms;\n    let time = point.ms;\n    let val = point.val;\n\n    if (this.mouse.down != null) {\n      from = Math.min(this.mouse.down.ts, this.mouse.position.ts);\n      to = Math.max(this.mouse.down.ts, this.mouse.position.ts);\n      time = to - from;\n      val = 'Zoom To:';\n    }\n\n    let body = '<div class=\"graph-tooltip-time\">' + val + '</div>';\n\n    body += '<center>';\n    body += this.dashboard.formatDate(moment(from)) + '<br/>';\n    body += 'to<br/>';\n    body += this.dashboard.formatDate(moment(to)) + '<br/><br/>';\n    body += moment.duration(time).humanize() + '<br/>';\n    body += '</center>';\n\n    let pageX = 0;\n    let pageY = 0;\n    if (isExternal) {\n      let rect = this.canvas.getBoundingClientRect();\n      pageY = rect.top + evt.pos.panelRelY * rect.height;\n      if (pageY < 0 || pageY > $(window).innerHeight()) {\n        // Skip Hidden tooltip\n        this.$tooltip.detach();\n        return;\n      }\n      pageY += $(window).scrollTop();\n\n      let elapsed = this.range.to - this.range.from;\n      let pX = (evt.pos.x - this.range.from) / elapsed;\n      pageX = rect.left + pX * rect.width;\n    } else {\n      pageX = evt.evt.pageX;\n      pageY = evt.evt.pageY;\n    }\n\n    this.$tooltip.html(body).place_tt(pageX + 20, pageY + 5);\n  }\n\n  onGraphHover(evt, showTT, isExternal) {\n    this.externalPT = false;\n    if (this.data && this.data.length) {\n      let hover = null;\n      let j = Math.floor(this.mouse.position.y / this.panel.rowHeight);\n      if (j < 0) {\n        j = 0;\n      }\n      if (j >= this.data.length) {\n        j = this.data.length - 1;\n      }\n\n      if (this.isTimeline) {\n        hover = this.data[j].changes[0];\n        for (let i = 0; i < this.data[j].changes.length; i++) {\n          if (this.data[j].changes[i].start > this.mouse.position.ts) {\n            break;\n          }\n          hover = this.data[j].changes[i];\n        }\n        this.hoverPoint = hover;\n\n        if (this.annotations && !isExternal && this._renderDimensions) {\n          if (evt.pos.y > this._renderDimensions.rowsHeight - 5) {\n            let min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n            let max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n            let width = this._renderDimensions.width;\n\n            const anno = _.find(this.annotations, a => {\n              if (a.isRegion) {\n                return evt.pos.x > a.time && evt.pos.x < a.timeEnd;\n              }\n              const anno_x = ((a.time - min) / (max - min)) * width;\n              const mouse_x = evt.evt.offsetX;\n              return anno_x > mouse_x - 5 && anno_x < mouse_x + 5;\n            });\n            if (anno) {\n              console.log('TODO, hover <annotation-tooltip>', anno);\n              // See: https://github.com/grafana/grafana/blob/master/public/app/plugins/panel/graph/jquery.flot.events.js#L10\n              this.$tooltip\n                .html(anno.text)\n                .place_tt(evt.evt.pageX + 20, evt.evt.pageY + 5);\n              return;\n            }\n          }\n        }\n\n        if (showTT) {\n          this.externalPT = isExternal;\n          this.showTooltip(evt, hover, isExternal);\n        }\n        this.onRender(); // refresh the view\n      } else if (!isExternal) {\n        if (this.isStacked) {\n          hover = this.data[j].legendInfo[0];\n          // for (let i = 0; i < this.data[j].legendInfo.length; i++) {\n          //   if (this.data[j].legendInfo[i].x > this.mouse.position.x) {\n          //     break;\n          //   }\n          //   hover = this.data[j].legendInfo[i];\n          // }\n          this.hoverPoint = hover;\n          this.onRender(); // refresh the view\n\n          if (showTT) {\n            this.externalPT = isExternal;\n            this.showLegandTooltip(evt.evt, hover);\n          }\n        }\n      }\n    } else {\n      this.$tooltip.detach(); // make sure it is hidden\n    }\n  }\n\n  onMouseClicked(where, event) {\n    if (event.metaKey == true || event.ctrlKey == true) {\n      console.log('TODO? Create Annotation?', where, event);\n      return;\n    }\n\n    let pt = this.hoverPoint;\n    if (pt && pt.start) {\n      let range = {from: moment.utc(pt.start), to: moment.utc(pt.start + pt.ms)};\n      this.timeSrv.setTime(range);\n      this.clear();\n    }\n  }\n\n  onMouseSelectedRange(range, event) {\n    if (event.metaKey == true || event.ctrlKey == true) {\n      console.log('TODO? Create range annotation?', range, event);\n      return;\n    }\n    this.timeSrv.setTime(range);\n    this.clear();\n  }\n\n  clear() {\n    this.mouse.position = null;\n    this.mouse.down = null;\n    this.hoverPoint = null;\n    $(this.canvas).css('cursor', 'wait');\n    appEvents.emit('graph-hover-clear');\n    this.render();\n  }\n\n  _updateRenderDimensions() {\n    this._renderDimensions = {};\n\n    const rect = (this._renderDimensions.rect = this.wrap.getBoundingClientRect());\n    const rows = (this._renderDimensions.rows = this.data.length);\n    const rowHeight = (this._renderDimensions.rowHeight = this.panel.rowHeight);\n    const rowsHeight = (this._renderDimensions.rowsHeight = rowHeight * rows);\n    const timeHeight = this.panel.showTimeAxis ? 14 + this.panel.textSizeTime : 0;\n    const height = (this._renderDimensions.height = rowsHeight + timeHeight);\n    const width = (this._renderDimensions.width = rect.width);\n    this._renderDimensions.height = height;\n\n    let top = 0;\n    let elapsed = this.range.to - this.range.from;\n\n    this._renderDimensions.matrix = [];\n    _.forEach(this.data, metric => {\n      let positions = [];\n\n      if (this.isTimeline) {\n        let point = metric.changes[0];\n        for (let i = 0; i < metric.changes.length; i++) {\n          point = metric.changes[i];\n          if (point.start <= this.range.to) {\n            let xt = Math.max(point.start - this.range.from, 0);\n            let x = (xt / elapsed) * width;\n            positions.push(x);\n          }\n        }\n      }\n\n      if (this.isStacked) {\n        let point = null;\n        let start = this.range.from;\n        for (let i = 0; i < metric.legendInfo.length; i++) {\n          point = metric.legendInfo[i];\n          let xt = Math.max(start - this.range.from, 0);\n          let x = (xt / elapsed) * width;\n          positions.push(x);\n          start += point.ms;\n        }\n      }\n\n      this._renderDimensions.matrix.push({\n        y: top,\n        positions: positions,\n      });\n\n      top += rowHeight;\n    });\n  }\n\n  _updateSelectionMatrix() {\n    let selectionPredicates = {\n      all: function() {\n        return true;\n      },\n      crosshairHover: function(i, j) {\n        if (j + 1 === this.data[i].changes.length) {\n          return this.data[i].changes[j].start <= this.mouse.position.ts;\n        }\n        return (\n          this.data[i].changes[j].start <= this.mouse.position.ts &&\n          this.mouse.position.ts < this.data[i].changes[j + 1].start\n        );\n      },\n      mouseX: function(i, j) {\n        let row = this._renderDimensions.matrix[i];\n        if (j + 1 === row.positions.length) {\n          return row.positions[j] <= this.mouse.position.x;\n        }\n        return (\n          row.positions[j] <= this.mouse.position.x &&\n          this.mouse.position.x < row.positions[j + 1]\n        );\n      },\n      metric: function(i) {\n        return this.data[i] === this._selectedMetric;\n      },\n      legendItem: function(i, j) {\n        if (this.data[i] !== this._selectedMetric) {\n          return false;\n        }\n        return this._selectedLegendItem.val === this._getVal(i, j);\n      },\n    };\n\n    function getPredicate() {\n      if (this._selectedLegendItem !== undefined) {\n        return 'legendItem';\n      }\n      if (this._selectedMetric !== undefined) {\n        return 'metric';\n      }\n      if (this.mouse.down !== null) {\n        return 'all';\n      }\n      if (this.panel.highlightOnMouseover && this.mouse.position != null) {\n        if (this.isTimeline) {\n          return 'crosshairHover';\n        }\n        if (this.isStacked) {\n          return 'mouseX';\n        }\n      }\n      return 'all';\n    }\n\n    let pn = getPredicate.bind(this)();\n    let predicate = selectionPredicates[pn].bind(this);\n    this._selectionMatrix = [];\n    for (let i = 0; i < this._renderDimensions.matrix.length; i++) {\n      let rs = [];\n      let r = this._renderDimensions.matrix[i];\n      for (let j = 0; j < r.positions.length; j++) {\n        rs.push(predicate(i, j));\n      }\n      this._selectionMatrix.push(rs);\n    }\n  }\n\n  _updateCanvasSize() {\n    this.canvas.width = this._renderDimensions.width * this._devicePixelRatio;\n    this.canvas.height = this._renderDimensions.height * this._devicePixelRatio;\n\n    $(this.canvas).css('width', this._renderDimensions.width + 'px');\n    $(this.canvas).css('height', this._renderDimensions.height + 'px');\n\n    this.context.scale(this._devicePixelRatio, this._devicePixelRatio);\n  }\n\n  _getVal(metricIndex, rectIndex) {\n    let point = undefined;\n    if (this.isTimeline) {\n      point = this.data[metricIndex].changes[rectIndex];\n    }\n    if (this.isStacked) {\n      point = this.data[metricIndex].legendInfo[rectIndex];\n    }\n    return point.val;\n  }\n\n  _renderRects() {\n    const matrix = this._renderDimensions.matrix;\n    const ctx = this.context;\n    _.forEach(this.data, (metric, i) => {\n      const rowObj = matrix[i];\n      for (let j = 0; j < rowObj.positions.length; j++) {\n        const currentX = rowObj.positions[j];\n        let nextX = this._renderDimensions.width;\n        if (j + 1 !== rowObj.positions.length) {\n          nextX = rowObj.positions[j + 1];\n        }\n        ctx.fillStyle = this.getColor(this._getVal(i, j));\n        let globalAlphaTemp = ctx.globalAlpha;\n        if (!this._selectionMatrix[i][j]) {\n          ctx.globalAlpha = 0.3;\n        }\n        ctx.fillRect(\n          currentX,\n          matrix[i].y,\n          nextX - currentX,\n          this._renderDimensions.rowHeight\n        );\n        ctx.globalAlpha = globalAlphaTemp;\n      }\n\n      if (i > 0) {\n        const top = matrix[i].y;\n        ctx.strokeStyle = this.panel.lineColor;\n        ctx.beginPath();\n        ctx.moveTo(0, top);\n        ctx.lineTo(this._renderDimensions.width, top);\n        ctx.stroke();\n      }\n    });\n  }\n\n  _renderLabels() {\n    let ctx = this.context;\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n    ctx.font = this.panel.textSize + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n\n    const offset = 2;\n    const rowHeight = this._renderDimensions.rowHeight;\n    _.forEach(this.data, (metric, i) => {\n      const {y, positions} = this._renderDimensions.matrix[i];\n\n      const centerY = y + rowHeight / 2;\n      // let labelPositionMetricName = y + rectHeight - this.panel.textSize / 2;\n      // let labelPositionLastValue = y + rectHeight - this.panel.textSize / 2;\n      // let labelPositionValue = y + this.panel.textSize / 2;\n      let labelPositionMetricName = centerY;\n      let labelPositionLastValue = centerY;\n      let labelPositionValue = centerY;\n\n      let hoverTextStart = -1;\n      let hoverTextEnd = -1;\n\n      if (this.mouse.position) {\n        for (let j = 0; j < positions.length; j++) {\n          if (positions[j] <= this.mouse.position.x) {\n            if (j >= positions.length - 1 || positions[j + 1] >= this.mouse.position.x) {\n              let val = this._getVal(i, j);\n              ctx.fillStyle = this.panel.valueTextColor;\n              ctx.textAlign = 'left';\n              hoverTextStart = positions[j] + offset;\n              ctx.fillText(val, hoverTextStart, labelPositionValue);\n              const txtinfo = ctx.measureText(val);\n              hoverTextEnd = hoverTextStart + txtinfo.width + 4;\n              break;\n            }\n          }\n        }\n      }\n\n      let minTextSpot = 0;\n      let maxTextSpot = this._renderDimensions.width;\n      if (this.panel.writeMetricNames) {\n        ctx.fillStyle = this.panel.metricNameColor;\n        ctx.textAlign = 'left';\n        const txtinfo = ctx.measureText(metric.name);\n        if (hoverTextStart < 0 || hoverTextStart > txtinfo.width) {\n          ctx.fillText(metric.name, offset, labelPositionMetricName);\n          minTextSpot = offset + ctx.measureText(metric.name).width + 2;\n        }\n      }\n      if (this.panel.writeLastValue) {\n        let val = this._getVal(i, positions.length - 1);\n        ctx.fillStyle = this.panel.valueTextColor;\n        ctx.textAlign = 'right';\n        const txtinfo = ctx.measureText(val);\n        const xval = this._renderDimensions.width - offset - txtinfo.width;\n        if (xval > hoverTextEnd) {\n          ctx.fillText(\n            val,\n            this._renderDimensions.width - offset,\n            labelPositionLastValue\n          );\n          maxTextSpot = this._renderDimensions.width - ctx.measureText(val).width - 10;\n        }\n      }\n\n      if (this.panel.writeAllValues) {\n        ctx.fillStyle = this.panel.valueTextColor;\n        ctx.textAlign = 'left';\n        for (let j = 0; j < positions.length; j++) {\n          const val = this._getVal(i, j);\n          let nextX = this._renderDimensions.width;\n          if (j + 1 !== positions.length) {\n            nextX = positions[j + 1];\n          }\n\n          const x = positions[j];\n          if (x > minTextSpot) {\n            const width = nextX - x;\n            if (maxTextSpot > x + width) {\n              // This clips the text within the given bounds\n              ctx.save();\n              ctx.rect(x, y, width, rowHeight);\n              ctx.clip();\n\n              ctx.fillText(val, x + offset, labelPositionValue);\n              ctx.restore();\n            }\n          }\n        }\n      }\n    });\n  }\n\n  _renderSelection() {\n    if (this.mouse.down === null) {\n      return;\n    }\n    if (this.mouse.position === null) {\n      return;\n    }\n    if (!this.isTimeline) {\n      return;\n    }\n\n    let ctx = this.context;\n    let height = this._renderDimensions.height;\n\n    let xmin = Math.min(this.mouse.position.x, this.mouse.down.x);\n    let xmax = Math.max(this.mouse.position.x, this.mouse.down.x);\n\n    ctx.fillStyle = 'rgba(110, 110, 110, 0.5)';\n    ctx.strokeStyle = 'rgba(110, 110, 110, 0.5)';\n    ctx.beginPath();\n    ctx.fillRect(xmin, 0, xmax - xmin, height);\n    ctx.strokeRect(xmin, 0, xmax - xmin, height);\n  }\n\n  _renderTimeAxis() {\n    if (!this.panel.showTimeAxis) {\n      return;\n    }\n\n    const ctx = this.context;\n    // const rows = this.data.length;\n    // const rowHeight = this.panel.rowHeight;\n    // const height = this._renderDimensions.height;\n    const width = this._renderDimensions.width;\n    const top = this._renderDimensions.rowsHeight;\n\n    const headerColumnIndent = 0; // header inset (zero for now)\n\n    ctx.font = this.panel.textSizeTime + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.fillStyle = this.panel.timeTextColor;\n    ctx.textAlign = 'left';\n    ctx.strokeStyle = this.panel.timeTextColor;\n    ctx.textBaseline = 'top';\n    ctx.setLineDash([7, 5]); // dashes are 5px and spaces are 3px\n    ctx.lineDashOffset = 0;\n\n    let min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n    let max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n    let minPxInterval = ctx.measureText('12/33 24:59').width * 2;\n    let estNumTicks = width / minPxInterval;\n    let estTimeInterval = (max - min) / estNumTicks;\n    let timeResolution = this.getTimeResolution(estTimeInterval);\n    let pixelStep = (timeResolution / (max - min)) * width;\n    let nextPointInTime = this.roundDate(min, timeResolution) + timeResolution;\n    let xPos = headerColumnIndent + ((nextPointInTime - min) / (max - min)) * width;\n\n    let timeFormat = this.time_format(max - min, timeResolution / 1000);\n    let displayOffset = 0;\n    if (this.dashboard.timezone == 'utc') {\n      displayOffset = new Date().getTimezoneOffset() * 60000;\n    }\n\n    while (nextPointInTime < max) {\n      // draw ticks\n      ctx.beginPath();\n      ctx.moveTo(xPos, top + 5);\n      ctx.lineTo(xPos, 0);\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      // draw time label\n      const date = new Date(nextPointInTime + displayOffset);\n      const dateStr = this.formatDate(date, timeFormat);\n      const xOffset = ctx.measureText(dateStr).width / 2;\n      ctx.fillText(dateStr, xPos - xOffset, top + 10);\n\n      nextPointInTime += timeResolution;\n      xPos += pixelStep;\n    }\n  }\n\n  _renderCrosshair() {\n    if (this.mouse.down != null) {\n      return;\n    }\n    if (this.mouse.position === null) {\n      return;\n    }\n    if (!this.isTimeline) {\n      return;\n    }\n\n    let ctx = this.context;\n    let rows = this.data.length;\n    //let rowHeight = this.panel.rowHeight;\n    let height = this._renderDimensions.height;\n\n    ctx.beginPath();\n    ctx.moveTo(this.mouse.position.x, 0);\n    ctx.lineTo(this.mouse.position.x, height);\n    ctx.strokeStyle = this.panel.crosshairColor;\n    ctx.setLineDash([]);\n    ctx.lineWidth = 1;\n    ctx.stroke();\n\n    // Draw a Circle around the point if showing a tooltip\n    if (this.externalPT && rows > 1) {\n      ctx.beginPath();\n      ctx.arc(this.mouse.position.x, this.mouse.position.y, 3, 0, 2 * Math.PI, false);\n      ctx.fillStyle = this.panel.crosshairColor;\n      ctx.fill();\n      ctx.lineWidth = 1;\n    }\n  }\n\n  _renderAnnotations() {\n    if (!this.panel.showTimeAxis) {\n      return;\n    }\n    if (!this.annotations) {\n      return;\n    }\n\n    const ctx = this.context;\n    //const rows = this.data.length;\n    const rowHeight = this.panel.rowHeight;\n    //const height = this._renderDimensions.height;\n    const width = this._renderDimensions.width;\n    const top = this._renderDimensions.rowsHeight;\n\n    const headerColumnIndent = 0; // header inset (zero for now)\n    ctx.font = this.panel.textSizeTime + 'px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.fillStyle = '#7FE9FF';\n    ctx.textAlign = 'left';\n    ctx.strokeStyle = '#7FE9FF';\n\n    ctx.textBaseline = 'top';\n    ctx.setLineDash([3, 3]);\n    ctx.lineDashOffset = 0;\n    ctx.lineWidth = 2;\n\n    let min = _.isUndefined(this.range.from) ? null : this.range.from.valueOf();\n    let max = _.isUndefined(this.range.to) ? null : this.range.to.valueOf();\n    //let xPos = headerColumnIndent;\n\n    _.forEach(this.annotations, anno => {\n      ctx.setLineDash([3, 3]);\n\n      let isAlert = false;\n      if (anno.source.iconColor) {\n        ctx.fillStyle = anno.source.iconColor;\n        ctx.strokeStyle = anno.source.iconColor;\n      } else if (anno.annotation === undefined) {\n        // grafana annotation\n        ctx.fillStyle = '#7FE9FF';\n        ctx.strokeStyle = '#7FE9FF';\n      } else {\n        isAlert = true;\n        ctx.fillStyle = '#EA0F3B'; //red\n        ctx.strokeStyle = '#EA0F3B';\n      }\n\n      this._drawVertical(\n        ctx,\n        anno.time,\n        min,\n        max,\n        headerColumnIndent,\n        top,\n        width,\n        isAlert\n      );\n\n      //do the TO rangeMap\n      if (anno.isRegion) {\n        this._drawVertical(\n          ctx,\n          anno.timeEnd,\n          min,\n          max,\n          headerColumnIndent,\n          top,\n          width,\n          isAlert\n        );\n\n        //draw horizontal line at bottom\n        let xPosStart = headerColumnIndent + ((anno.time - min) / (max - min)) * width;\n        let xPosEnd = headerColumnIndent + ((anno.timeEnd - min) / (max - min)) * width;\n\n        // draw ticks\n        ctx.beginPath();\n        ctx.moveTo(xPosStart, top + 5);\n        ctx.lineTo(xPosEnd, top + 5);\n\n        ctx.lineWidth = 4;\n        ctx.setLineDash([]);\n        ctx.stroke();\n        //end horizontal\n        //do transparency\n        if (isAlert == false) {\n          ctx.save();\n          ctx.fillStyle = '#7FE9FF';\n          ctx.globalAlpha = 0.2;\n          ctx.fillRect(xPosStart, 0, xPosEnd - xPosStart, rowHeight);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    });\n  }\n\n  _drawVertical(ctx, timeVal, min, max, headerColumnIndent, top, width, isAlert) {\n    let xPos = headerColumnIndent + ((timeVal - min) / (max - min)) * width;\n\n    // draw ticks\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(xPos, top + 5);\n    ctx.lineTo(xPos, 0);\n    ctx.stroke();\n\n    // draw triangle\n    ctx.moveTo(xPos + 0, top);\n    ctx.lineTo(xPos - 5, top + 7);\n    ctx.lineTo(xPos + 5, top + 7);\n    ctx.fill();\n\n    // draw alert label\n    if (isAlert == true) {\n      let dateStr = '\\u25B2';\n      let xOffset = ctx.measureText(dateStr).width / 2;\n      ctx.fillText(dateStr, xPos - xOffset, top + 10);\n    }\n  }\n}\n\nexport {DiscretePanelCtrl as PanelCtrl};\n","///<reference path=\"../node_modules/grafana-sdk-mocks/app/headers/common.d.ts\" />\n\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\n\nimport moment from 'moment';\nimport $ from 'jquery';\n\nimport appEvents from 'app/core/app_events';\n\n// Expects a template with:\n// <div class=\"canvas-spot\"></div>\nexport class CanvasPanelCtrl extends MetricsPanelCtrl {\n  data: any;\n  mouse: any;\n  $tooltip: any;\n  wrap: any;\n  canvas: any;\n  context: any;\n  _devicePixelRatio: number;\n\n  /** @ngInject */\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.data = null;\n    this.mouse = {\n      position: null,\n      down: null,\n    };\n    this.$tooltip = $('<div class=\"graph-tooltip\">');\n\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n\n    this._devicePixelRatio = 1;\n    if (window.devicePixelRatio !== undefined) {\n      this._devicePixelRatio = window.devicePixelRatio;\n    }\n  }\n\n  onPanelInitalized() {\n    //console.log(\"onPanelInitalized()\");\n    this.render();\n  }\n\n  onRefresh() {\n    //console.log(\"onRefresh()\");\n    this.render();\n  }\n\n  // Typically you will override this\n  onRender() {\n    if (!this.context) {\n      console.log('No context!');\n      return;\n    }\n    console.log('canvas render', this.mouse);\n\n    let rect = this.wrap.getBoundingClientRect();\n\n    let height = Math.max(this.height, 100);\n    let width = rect.width;\n    this.canvas.width = width;\n    this.canvas.height = height;\n\n    let centerV = height / 2;\n\n    let ctx = this.context;\n    ctx.lineWidth = 1;\n    ctx.textBaseline = 'middle';\n\n    let time = '';\n    if (this.mouse.position != null) {\n      time = this.dashboard.formatDate(moment(this.mouse.position.ts));\n    }\n\n    ctx.fillStyle = '#999999';\n    ctx.fillRect(0, 0, width, height);\n    ctx.fillStyle = '#111111';\n    ctx.font = '24px \"Open Sans\", Helvetica, Arial, sans-serif';\n    ctx.textAlign = 'left';\n    ctx.fillText('Mouse @ ' + time, 10, centerV);\n\n    if (this.mouse.position != null) {\n      if (this.mouse.down != null) {\n        let xmin = Math.min(this.mouse.position.x, this.mouse.down.x);\n        let xmax = Math.max(this.mouse.position.x, this.mouse.down.x);\n\n        // Fill canvas using 'destination-out' and alpha at 0.05\n        ctx.globalCompositeOperation = 'destination-out';\n        ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n        ctx.beginPath();\n        ctx.fillRect(0, 0, xmin, height);\n        ctx.fill();\n\n        ctx.beginPath();\n        ctx.fillRect(xmax, 0, width, height);\n        ctx.fill();\n        ctx.globalCompositeOperation = 'source-over';\n      } else {\n        ctx.strokeStyle = '#111';\n        ctx.beginPath();\n        ctx.moveTo(this.mouse.position.x, 0);\n        ctx.lineTo(this.mouse.position.x, height);\n        ctx.lineWidth = 3;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(this.mouse.position.x, 0);\n        ctx.lineTo(this.mouse.position.x, height);\n        ctx.strokeStyle = '#e22c14';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n      }\n    }\n  }\n\n  clearTT() {\n    this.$tooltip.detach();\n  }\n\n  getMousePosition(evt) {\n    let elapsed = this.range.to - this.range.from;\n    let rect = this.canvas.getBoundingClientRect();\n    let x = evt.offsetX; // - rect.left;\n    let ts = this.range.from + elapsed * (x / parseFloat(rect.width));\n    let y = evt.clientY - rect.top;\n\n    return {\n      x: x,\n      y: y,\n      yRel: y / parseFloat(rect.height),\n      ts: ts,\n      evt: evt,\n    };\n  }\n\n  onGraphHover(evt, showTT, isExternal) {\n    console.log('HOVER', evt, showTT, isExternal);\n  }\n\n  onMouseClicked(where, event) {\n    console.log('CANVAS CLICKED', where, event);\n    this.render();\n  }\n\n  onMouseSelectedRange(range, event) {\n    console.log('CANVAS Range', range, event);\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.wrap = elem.find('.canvas-spot')[0];\n    this.canvas = document.createElement('canvas');\n    this.wrap.appendChild(this.canvas);\n\n    $(this.canvas).css('cursor', 'pointer');\n    $(this.wrap).css('width', '100%');\n\n    //  console.log( 'link', this );\n\n    this.context = this.canvas.getContext('2d');\n    this.canvas.addEventListener(\n      'mousemove',\n      evt => {\n        if (!this.range) {\n          return; // skip events before we have loaded\n        }\n\n        this.mouse.position = this.getMousePosition(evt);\n        let info = {\n          pos: {\n            pageX: evt.pageX,\n            pageY: evt.pageY,\n            x: this.mouse.position.ts,\n            y: this.mouse.position.y,\n            panelRelY: this.mouse.position.yRel,\n            panelRelX: this.mouse.position.xRel,\n          },\n          evt: evt,\n          panel: this.panel,\n        };\n        appEvents.emit('graph-hover', info);\n        if (this.mouse.down != null) {\n          $(this.canvas).css('cursor', 'col-resize');\n        }\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseout',\n      evt => {\n        if (this.mouse.down == null) {\n          this.mouse.position = null;\n          this.onRender();\n          this.$tooltip.detach();\n          appEvents.emit('graph-hover-clear');\n        }\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mousedown',\n      evt => {\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseenter',\n      evt => {\n        if (this.mouse.down && !evt.buttons) {\n          this.mouse.position = null;\n          this.mouse.down = null;\n          this.onRender();\n          this.$tooltip.detach();\n          appEvents.emit('graph-hover-clear');\n        }\n        $(this.canvas).css('cursor', 'pointer');\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'mouseup',\n      evt => {\n      },\n      false\n    );\n\n    this.canvas.addEventListener(\n      'dblclick',\n      evt => {\n        this.mouse.position = null;\n        this.mouse.down = null;\n        this.onRender();\n        this.$tooltip.detach();\n        appEvents.emit('graph-hover-clear');\n\n        console.log('TODO, ZOOM OUT');\n      },\n      true\n    );\n\n    // global events\n    appEvents.on(\n      'graph-hover',\n      event => {\n        // ignore other graph hover events if shared tooltip is disabled\n        let isThis = event.panel.id === this.panel.id;\n        if (!this.dashboard.sharedTooltipModeEnabled() && !isThis) {\n          return;\n        }\n\n        // ignore if other panels are fullscreen\n        if (this.otherPanelInFullscreenMode()) {\n          return;\n        }\n\n        // Calculate the mouse position when it came from somewhere else\n        if (!isThis) {\n          if (!event.pos.x || !this.range) {\n            // NOTE, this happens when a panel has no data\n            // console.log('Invalid hover point', event);\n            return;\n          }\n\n          let ts = event.pos.x;\n          let rect = this.canvas.getBoundingClientRect();\n          let elapsed = this.range.to - this.range.from;\n          let x = ((ts - this.range.from) / elapsed) * rect.width;\n\n          this.mouse.position = {\n            x: x,\n            y: event.pos.panelRelY * rect.height,\n            yRel: event.pos.panelRelY,\n            ts: ts,\n            gevt: event,\n          };\n          //console.log( \"Calculate mouseInfo\", event, this.mouse.position);\n        }\n\n        this.onGraphHover(\n          event,\n          isThis || !this.dashboard.sharedCrosshairModeOnly(),\n          !isThis\n        );\n      },\n      scope\n    );\n\n    appEvents.on(\n      'graph-hover-clear',\n      (event, info) => {\n        this.mouse.position = null;\n        this.mouse.down = null;\n        this.render();\n        this.$tooltip.detach();\n      },\n      scope\n    );\n\n    // scope.$on('$destroy', () => {\n    //   this.$tooltip.destroy();\n    //   elem.off();\n    //   elem.remove();\n    // });\n  }\n\n  // Utility Functions for time axis\n  //---------------------------------\n\n  time_format(range: number, secPerTick: number): string {\n    let oneDay = 86400000;\n    let oneYear = 31536000000;\n\n    if (secPerTick <= 45) {\n      return '%H:%M:%S';\n    }\n    if (secPerTick <= 7200 || range <= oneDay) {\n      return '%H:%M';\n    }\n    if (secPerTick <= 80000) {\n      return '%m/%d %H:%M';\n    }\n    if (secPerTick <= 2419200 || range <= oneYear) {\n      return '%m/%d';\n    }\n    return '%Y-%m';\n  }\n\n  getTimeResolution(estTimeInterval: number): number {\n    let timeIntInSecs = estTimeInterval / 1000;\n\n    if (timeIntInSecs <= 30) {\n      return 30 * 1000;\n    }\n\n    if (timeIntInSecs <= 60) {\n      return 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 5) {\n      return 5 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 10) {\n      return 10 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 30) {\n      return 30 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 60) {\n      return 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 60 * 60) {\n      return 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 2 * 60 * 60) {\n      return 2 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 6 * 60 * 60) {\n      return 6 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 12 * 60 * 60) {\n      return 12 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 24 * 60 * 60) {\n      return 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 2 * 24 * 60 * 60) {\n      return 2 * 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 7 * 24 * 60 * 60) {\n      return 7 * 24 * 60 * 60 * 1000;\n    }\n\n    if (timeIntInSecs <= 30 * 24 * 60 * 60) {\n      return 30 * 24 * 60 * 60 * 1000;\n    }\n\n    return 6 * 30 * 24 * 60 * 60 * 1000;\n  }\n\n  roundDate(timeStamp, roundee) {\n    timeStamp -= timeStamp % roundee; //subtract amount of time since midnight\n    return timeStamp;\n  }\n\n  formatDate(d, fmt) {\n    const monthNames = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    const dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    if (typeof d.strftime == 'function') {\n      return d.strftime(fmt);\n    }\n\n    let r = [];\n    let escape = false;\n    let hours = d.getHours();\n    let isAM = hours < 12;\n    let hours12;\n\n    if (hours > 12) {\n      hours12 = hours - 12;\n    } else if (hours == 0) {\n      hours12 = 12;\n    } else {\n      hours12 = hours;\n    }\n\n    for (let i = 0; i < fmt.length; ++i) {\n      let c = fmt.charAt(i);\n\n      if (escape) {\n        switch (c) {\n          case 'a':\n            c = '' + dayNames[d.getDay()];\n            break;\n          case 'b':\n            c = '' + monthNames[d.getMonth()];\n            break;\n          case 'd':\n            c = this.leftPad(d.getDate(), '');\n            break;\n          case 'e':\n            c = this.leftPad(d.getDate(), ' ');\n            break;\n          case 'h': // For back-compat with 0.7; remove in 1.0\n          case 'H':\n            c = this.leftPad(hours, null);\n            break;\n          case 'I':\n            c = this.leftPad(hours12, null);\n            break;\n          case 'l':\n            c = this.leftPad(hours12, ' ');\n            break;\n          case 'm':\n            c = this.leftPad(d.getMonth() + 1, '');\n            break;\n          case 'M':\n            c = this.leftPad(d.getMinutes(), null);\n            break;\n          // quarters not in Open Group's strftime specification\n          case 'q':\n            c = '' + (Math.floor(d.getMonth() / 3) + 1);\n            break;\n          case 'S':\n            c = this.leftPad(d.getSeconds(), null);\n            break;\n          case 'y':\n            c = this.leftPad(d.getFullYear() % 100, null);\n            break;\n          case 'Y':\n            c = '' + d.getFullYear();\n            break;\n          case 'p':\n            c = isAM ? '' + 'am' : '' + 'pm';\n            break;\n          case 'P':\n            c = isAM ? '' + 'AM' : '' + 'PM';\n            break;\n          case 'w':\n            c = '' + d.getDay();\n            break;\n        }\n        r.push(c);\n        escape = false;\n      } else {\n        if (c == '%') {\n          escape = true;\n        } else {\n          r.push(c);\n        }\n      }\n    }\n\n    return r.join('');\n  }\n\n  leftPad(n, pad) {\n    n = '' + n;\n    pad = '' + (pad == null ? '0' : pad);\n    return n.length == 1 ? pad + n : n;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import _ from 'lodash';\n\nexport class PointInfo {\n  val: string;\n  start: number; // timestamp\n  ms: number = 0; // elapsed time\n\n  constructor(val: string, start: number) {\n    this.val = val;\n    this.start = start;\n  }\n}\n\nexport class LegendValue {\n  val: string;\n  ms: number = 0; // elapsed time\n  count: number = 0;\n  per: number = 0;\n\n  constructor(val: string) {\n    this.val = val;\n  }\n}\n\nexport class DistinctPoints {\n  changes: Array<PointInfo> = [];\n  legendInfo: Array<LegendValue> = [];\n  last: PointInfo = null;\n  asc = false;\n  transitionCount = 0;\n  distinctValuesCount = 0;\n  elapsed = 0;\n\n  constructor(public name) {}\n\n  // ts numeric ms,\n  // val is the normalized value\n  add(ts: number, val: string) {\n    if (this.last == null) {\n      this.last = {\n        val: val,\n        start: ts,\n        ms: 0,\n      };\n      this.changes.push(this.last);\n    } else if (ts === this.last.start) {\n      console.log('skip point with duplicate timestamp', ts, val);\n      return;\n    } else {\n      if (this.changes.length === 1) {\n        this.asc = ts > this.last.start;\n      }\n\n      if (ts > this.last.start !== this.asc) {\n        console.log('skip out of order point', ts, val);\n        return;\n      }\n\n      // Same value\n      if (val === this.last.val) {\n        if (!this.asc) {\n          this.last.start = ts;\n        }\n        else {\n          this.last.ms = ts - this.last.start;\n        }\n      } else {\n        this.last = {\n          val: val,\n          start: ts,\n          ms: 0,\n        };\n        this.changes.push(this.last);\n      }\n    }\n  }\n\n  finish(ctrl) {\n    if (this.changes.length < 1) {\n      console.log('no points found!');\n      return;\n    }\n\n    if (!this.asc) {\n      this.last = this.changes[0];\n      _.reverse(this.changes);\n    }\n\n    // Add a point beyond the controls\n    if (this.last.start < ctrl.range.to) {\n      let until = this.last.start + this.last.ms + 1;\n      // let now = Date.now();\n      // if(this.last.start < now && ctrl.range.to > now) {\n      //   until = now;\n      // }\n\n      // This won't be shown, but will keep the count consistent\n      this.changes.push({\n        val: \"\",\n        start: until,\n        ms: 0,\n      });\n    }\n\n    this.transitionCount = 0;\n    let distinct = new Map<string, LegendValue>();\n    let last: PointInfo = this.changes[0];\n    for (let i = 1; i < this.changes.length; i++) {\n      let pt = this.changes[i];\n\n      let s = last.start;\n      let e = pt.start;\n      if (s < ctrl.range.from) {\n        s = ctrl.range.from;\n      } else if (s < ctrl.range.to) {\n        this.transitionCount++;\n      }\n\n      if (e > ctrl.range.to) {\n        e = ctrl.range.to;\n      }\n\n      last.ms = e - s;\n      if (last.ms > 0) {\n        if (distinct.has(last.val)) {\n          let v = distinct.get(last.val);\n          v.ms += last.ms;\n          v.count++;\n        } else {\n          distinct.set(last.val, {val: last.val, ms: last.ms, count: 1, per: 0});\n        }\n      }\n      last = pt;\n    }\n\n    let elapsed = ctrl.range.to - ctrl.range.from;\n    this.elapsed = elapsed;\n\n    distinct.forEach((value: LegendValue, key: any) => {\n      value.per = value.ms / elapsed;\n      this.legendInfo.push(value);\n    });\n    this.distinctValuesCount = _.size(this.legendInfo);\n\n    if (!ctrl.isTimeline) {\n      this.legendInfo = _.orderBy(this.legendInfo, ['ms'], ['desc']);\n    }\n  }\n\n  static combineLegend(data: DistinctPoints[], ctrl: any): DistinctPoints {\n    if (data.length == 1) {\n      return data[0];\n    }\n\n    let merged: DistinctPoints = new DistinctPoints('merged');\n    let elapsed = 0;\n    let distinct = new Map<string, LegendValue>();\n    _.forEach(data, (m: DistinctPoints) => {\n      merged.transitionCount += m.transitionCount;\n      elapsed += m.elapsed;\n\n      _.forEach(m.legendInfo, (leg: LegendValue) => {\n        if (distinct.has(leg.val)) {\n          let v = distinct.get(leg.val);\n          v.ms += leg.ms;\n          v.count += leg.count;\n          // per gets recalculated at the end\n        } else {\n          distinct.set(leg.val, {val: leg.val, ms: leg.ms, count: leg.count, per: 0});\n        }\n      });\n    });\n\n    merged.elapsed = elapsed;\n    distinct.forEach((value: LegendValue, key: any) => {\n      value.per = value.ms / elapsed;\n      merged.legendInfo.push(value);\n    });\n    merged.distinctValuesCount = _.size(merged.legendInfo);\n    return merged;\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8__;"],"sourceRoot":""}